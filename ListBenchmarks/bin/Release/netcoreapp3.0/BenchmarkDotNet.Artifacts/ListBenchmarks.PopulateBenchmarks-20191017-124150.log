// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\8bbf8ff0-80cc-43dc-b47a-342ec71033f0
// command took 1.48s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\8bbf8ff0-80cc-43dc-b47a-342ec71033f0
// command took 2.56s and exited with 0
// ***** Done, took 00:00:04 (4.24 sec)   *****
// Found 2 benchmarks:
//   PopulateBenchmarks.LinqPopulate: DefaultJob
//   PopulateBenchmarks.ParallelLinqPopulate: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: PopulateBenchmarks.LinqPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "8bbf8ff0-80cc-43dc-b47a-342ec71033f0.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.LinqPopulate" --job "Default" --benchmarkId 0 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\8bbf8ff0-80cc-43dc-b47a-342ec71033f0\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 306000.00 ns, 306.0000 us/op
WorkloadJitting  1: 1 op, 5953500.00 ns, 5.9535 ms/op

OverheadJitting  2: 16 op, 267800.00 ns, 16.7375 us/op
WorkloadJitting  2: 16 op, 72227500.00 ns, 4.5142 ms/op

WorkloadPilot    1: 16 op, 70900700.00 ns, 4.4313 ms/op
WorkloadPilot    2: 32 op, 138073300.00 ns, 4.3148 ms/op
WorkloadPilot    3: 64 op, 242419000.00 ns, 3.7878 ms/op
WorkloadPilot    4: 128 op, 490845700.00 ns, 3.8347 ms/op
WorkloadPilot    5: 256 op, 969051600.00 ns, 3.7854 ms/op

OverheadWarmup   1: 256 op, 3400.00 ns, 13.2812 ns/op
OverheadWarmup   2: 256 op, 900.00 ns, 3.5156 ns/op
OverheadWarmup   3: 256 op, 800.00 ns, 3.1250 ns/op
OverheadWarmup   4: 256 op, 800.00 ns, 3.1250 ns/op
OverheadWarmup   5: 256 op, 900.00 ns, 3.5156 ns/op
OverheadWarmup   6: 256 op, 900.00 ns, 3.5156 ns/op
OverheadWarmup   7: 256 op, 800.00 ns, 3.1250 ns/op

OverheadActual   1: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual   2: 256 op, 1100.00 ns, 4.2969 ns/op
OverheadActual   3: 256 op, 1000.00 ns, 3.9062 ns/op
OverheadActual   4: 256 op, 900.00 ns, 3.5156 ns/op
OverheadActual   5: 256 op, 900.00 ns, 3.5156 ns/op
OverheadActual   6: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual   7: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual   8: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual   9: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  10: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  11: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  12: 256 op, 700.00 ns, 2.7344 ns/op
OverheadActual  13: 256 op, 900.00 ns, 3.5156 ns/op
OverheadActual  14: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  15: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  16: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  17: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  18: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  19: 256 op, 700.00 ns, 2.7344 ns/op
OverheadActual  20: 256 op, 800.00 ns, 3.1250 ns/op

WorkloadWarmup   1: 256 op, 952495600.00 ns, 3.7207 ms/op
WorkloadWarmup   2: 256 op, 975585800.00 ns, 3.8109 ms/op
WorkloadWarmup   3: 256 op, 969538900.00 ns, 3.7873 ms/op
WorkloadWarmup   4: 256 op, 963870600.00 ns, 3.7651 ms/op
WorkloadWarmup   5: 256 op, 963858700.00 ns, 3.7651 ms/op
WorkloadWarmup   6: 256 op, 959904700.00 ns, 3.7496 ms/op
WorkloadWarmup   7: 256 op, 962484500.00 ns, 3.7597 ms/op
WorkloadWarmup   8: 256 op, 958391200.00 ns, 3.7437 ms/op

// BeforeActualRun
WorkloadActual   1: 256 op, 965705700.00 ns, 3.7723 ms/op
WorkloadActual   2: 256 op, 974938900.00 ns, 3.8084 ms/op
WorkloadActual   3: 256 op, 976089600.00 ns, 3.8129 ms/op
WorkloadActual   4: 256 op, 969129800.00 ns, 3.7857 ms/op
WorkloadActual   5: 256 op, 968656300.00 ns, 3.7838 ms/op
WorkloadActual   6: 256 op, 984012600.00 ns, 3.8438 ms/op
WorkloadActual   7: 256 op, 972887400.00 ns, 3.8003 ms/op
WorkloadActual   8: 256 op, 1063447500.00 ns, 4.1541 ms/op
WorkloadActual   9: 256 op, 977578600.00 ns, 3.8187 ms/op
WorkloadActual  10: 256 op, 979632500.00 ns, 3.8267 ms/op
WorkloadActual  11: 256 op, 963956500.00 ns, 3.7655 ms/op
WorkloadActual  12: 256 op, 979331000.00 ns, 3.8255 ms/op
WorkloadActual  13: 256 op, 967212000.00 ns, 3.7782 ms/op
WorkloadActual  14: 256 op, 976294000.00 ns, 3.8136 ms/op
WorkloadActual  15: 256 op, 1128006700.00 ns, 4.4063 ms/op

// AfterActualRun
WorkloadResult   1: 256 op, 965704900.00 ns, 3.7723 ms/op
WorkloadResult   2: 256 op, 974938100.00 ns, 3.8084 ms/op
WorkloadResult   3: 256 op, 976088800.00 ns, 3.8128 ms/op
WorkloadResult   4: 256 op, 969129000.00 ns, 3.7857 ms/op
WorkloadResult   5: 256 op, 968655500.00 ns, 3.7838 ms/op
WorkloadResult   6: 256 op, 984011800.00 ns, 3.8438 ms/op
WorkloadResult   7: 256 op, 972886600.00 ns, 3.8003 ms/op
WorkloadResult   8: 256 op, 977577800.00 ns, 3.8187 ms/op
WorkloadResult   9: 256 op, 979631700.00 ns, 3.8267 ms/op
WorkloadResult  10: 256 op, 963955700.00 ns, 3.7655 ms/op
WorkloadResult  11: 256 op, 979330200.00 ns, 3.8255 ms/op
WorkloadResult  12: 256 op, 967211200.00 ns, 3.7782 ms/op
WorkloadResult  13: 256 op, 976293200.00 ns, 3.8136 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 3.8027 ms, StdErr = 0.0066 ms (0.17%); N = 13, StdDev = 0.0239 ms
Min = 3.7655 ms, Q1 = 3.7810 ms, Median = 3.8084 ms, Q3 = 3.8221 ms, Max = 3.8438 ms
IQR = 0.0411 ms, LowerFence = 3.7193 ms, UpperFence = 3.8837 ms
ConfidenceInterval = [3.7741 ms; 3.8313 ms] (CI 99.9%), Margin = 0.0286 ms (0.75% of Mean)
Skewness = -0.03, Kurtosis = 1.62, MValue = 2

// **************************
// Benchmark: PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "8bbf8ff0-80cc-43dc-b47a-342ec71033f0.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ParallelLinqPopulate" --job "Default" --benchmarkId 1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\8bbf8ff0-80cc-43dc-b47a-342ec71033f0\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 298900.00 ns, 298.9000 us/op
WorkloadJitting  1: 1 op, 234269600.00 ns, 234.2696 ms/op

WorkloadPilot    1: 2 op, 451631800.00 ns, 225.8159 ms/op
WorkloadPilot    2: 3 op, 692774200.00 ns, 230.9247 ms/op

WorkloadWarmup   1: 3 op, 749272600.00 ns, 249.7575 ms/op
WorkloadWarmup   2: 3 op, 691606700.00 ns, 230.5356 ms/op
WorkloadWarmup   3: 3 op, 752294500.00 ns, 250.7648 ms/op
WorkloadWarmup   4: 3 op, 688334300.00 ns, 229.4448 ms/op
WorkloadWarmup   5: 3 op, 700070500.00 ns, 233.3568 ms/op
WorkloadWarmup   6: 3 op, 687841500.00 ns, 229.2805 ms/op

// BeforeActualRun
WorkloadActual   1: 3 op, 744847600.00 ns, 248.2825 ms/op
WorkloadActual   2: 3 op, 691336400.00 ns, 230.4455 ms/op
WorkloadActual   3: 3 op, 705880300.00 ns, 235.2934 ms/op
WorkloadActual   4: 3 op, 715138400.00 ns, 238.3795 ms/op
WorkloadActual   5: 3 op, 705605200.00 ns, 235.2017 ms/op
WorkloadActual   6: 3 op, 727486400.00 ns, 242.4955 ms/op
WorkloadActual   7: 3 op, 722640500.00 ns, 240.8802 ms/op
WorkloadActual   8: 3 op, 706175400.00 ns, 235.3918 ms/op
WorkloadActual   9: 3 op, 742856200.00 ns, 247.6187 ms/op
WorkloadActual  10: 3 op, 751722800.00 ns, 250.5743 ms/op
WorkloadActual  11: 3 op, 703294500.00 ns, 234.4315 ms/op
WorkloadActual  12: 3 op, 726530500.00 ns, 242.1768 ms/op
WorkloadActual  13: 3 op, 734900100.00 ns, 244.9667 ms/op
WorkloadActual  14: 3 op, 702681800.00 ns, 234.2273 ms/op
WorkloadActual  15: 3 op, 687384400.00 ns, 229.1281 ms/op
WorkloadActual  16: 3 op, 717458800.00 ns, 239.1529 ms/op
WorkloadActual  17: 3 op, 694688200.00 ns, 231.5627 ms/op
WorkloadActual  18: 3 op, 697718300.00 ns, 232.5728 ms/op
WorkloadActual  19: 3 op, 713268500.00 ns, 237.7562 ms/op
WorkloadActual  20: 3 op, 692810800.00 ns, 230.9369 ms/op
WorkloadActual  21: 3 op, 732644900.00 ns, 244.2150 ms/op
WorkloadActual  22: 3 op, 704651500.00 ns, 234.8838 ms/op
WorkloadActual  23: 3 op, 744346900.00 ns, 248.1156 ms/op
WorkloadActual  24: 3 op, 704197400.00 ns, 234.7325 ms/op
WorkloadActual  25: 3 op, 738403300.00 ns, 246.1344 ms/op

// AfterActualRun
WorkloadResult   1: 3 op, 744847600.00 ns, 248.2825 ms/op
WorkloadResult   2: 3 op, 691336400.00 ns, 230.4455 ms/op
WorkloadResult   3: 3 op, 705880300.00 ns, 235.2934 ms/op
WorkloadResult   4: 3 op, 715138400.00 ns, 238.3795 ms/op
WorkloadResult   5: 3 op, 705605200.00 ns, 235.2017 ms/op
WorkloadResult   6: 3 op, 727486400.00 ns, 242.4955 ms/op
WorkloadResult   7: 3 op, 722640500.00 ns, 240.8802 ms/op
WorkloadResult   8: 3 op, 706175400.00 ns, 235.3918 ms/op
WorkloadResult   9: 3 op, 742856200.00 ns, 247.6187 ms/op
WorkloadResult  10: 3 op, 751722800.00 ns, 250.5743 ms/op
WorkloadResult  11: 3 op, 703294500.00 ns, 234.4315 ms/op
WorkloadResult  12: 3 op, 726530500.00 ns, 242.1768 ms/op
WorkloadResult  13: 3 op, 734900100.00 ns, 244.9667 ms/op
WorkloadResult  14: 3 op, 702681800.00 ns, 234.2273 ms/op
WorkloadResult  15: 3 op, 687384400.00 ns, 229.1281 ms/op
WorkloadResult  16: 3 op, 717458800.00 ns, 239.1529 ms/op
WorkloadResult  17: 3 op, 694688200.00 ns, 231.5627 ms/op
WorkloadResult  18: 3 op, 697718300.00 ns, 232.5728 ms/op
WorkloadResult  19: 3 op, 713268500.00 ns, 237.7562 ms/op
WorkloadResult  20: 3 op, 692810800.00 ns, 230.9369 ms/op
WorkloadResult  21: 3 op, 732644900.00 ns, 244.2150 ms/op
WorkloadResult  22: 3 op, 704651500.00 ns, 234.8838 ms/op
WorkloadResult  23: 3 op, 744346900.00 ns, 248.1156 ms/op
WorkloadResult  24: 3 op, 704197400.00 ns, 234.7325 ms/op
WorkloadResult  25: 3 op, 738403300.00 ns, 246.1344 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 238.7823 ms, StdErr = 1.2715 ms (0.53%); N = 25, StdDev = 6.3577 ms
Min = 229.1281 ms, Q1 = 234.3294 ms, Median = 237.7562 ms, Q3 = 244.5908 ms, Max = 250.5743 ms
IQR = 10.2614 ms, LowerFence = 218.9372 ms, UpperFence = 259.9830 ms
ConfidenceInterval = [234.0199 ms; 243.5447 ms] (CI 99.9%), Margin = 4.7624 ms (1.99% of Mean)
Skewness = 0.29, Kurtosis = 1.71, MValue = 2.83

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report.html

// * Detailed results *
PopulateBenchmarks.LinqPopulate: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 3.8027 ms, StdErr = 0.0066 ms (0.17%); N = 13, StdDev = 0.0239 ms
Min = 3.7655 ms, Q1 = 3.7810 ms, Median = 3.8084 ms, Q3 = 3.8221 ms, Max = 3.8438 ms
IQR = 0.0411 ms, LowerFence = 3.7193 ms, UpperFence = 3.8837 ms
ConfidenceInterval = [3.7741 ms; 3.8313 ms] (CI 99.9%), Margin = 0.0286 ms (0.75% of Mean)
Skewness = -0.03, Kurtosis = 1.62, MValue = 2
-------------------- Histogram --------------------
[3.757 ms ; 3.853 ms) | @@@@@@@@@@@@@
---------------------------------------------------

PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 238.7823 ms, StdErr = 1.2715 ms (0.53%); N = 25, StdDev = 6.3577 ms
Min = 229.1281 ms, Q1 = 234.3294 ms, Median = 237.7562 ms, Q3 = 244.5908 ms, Max = 250.5743 ms
IQR = 10.2614 ms, LowerFence = 218.9372 ms, UpperFence = 259.9830 ms
ConfidenceInterval = [234.0199 ms; 243.5447 ms] (CI 99.9%), Margin = 4.7624 ms (1.99% of Mean)
Skewness = 0.29, Kurtosis = 1.71, MValue = 2.83
-------------------- Histogram --------------------
[227.226 ms ; 236.322 ms) | @@@@@@@@@@@@
[236.322 ms ; 241.711 ms) | @@@@
[241.711 ms ; 252.477 ms) | @@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.18362
AMD Ryzen 5 1600, 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=3.0.100
  [Host]     : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT  [AttachedDebugger]
  DefaultJob : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT


|               Method |       Mean |     Error |    StdDev |
|--------------------- |-----------:|----------:|----------:|
|         LinqPopulate |   3.803 ms | 0.0286 ms | 0.0239 ms |
| ParallelLinqPopulate | 238.782 ms | 4.7624 ms | 6.3577 ms |

// * Warnings *
MultimodalDistribution
  PopulateBenchmarks.ParallelLinqPopulate: Default -> It seems that the distribution can have several modes (mValue = 2.83)
Environment
  Summary -> Benchmark was executed with attached debugger

// * Hints *
Outliers
  PopulateBenchmarks.LinqPopulate: Default -> 2 outliers were removed (4.15 ms, 4.41 ms)

// * Legends *
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  1 ms   : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:49 (49.48 sec), executed benchmarks: 2

Global total time: 00:00:53 (53.73 sec), executed benchmarks: 2
// * Artifacts cleanup *

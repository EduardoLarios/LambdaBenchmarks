// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\1c0ef377-c8d1-4576-b137-c92c2dff05a4
// command took 1.49s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\1c0ef377-c8d1-4576-b137-c92c2dff05a4
// command took 2.55s and exited with 0
// ***** Done, took 00:00:04 (4.25 sec)   *****
// Found 2 benchmarks:
//   PopulateBenchmarks.LinqPopulate: DefaultJob
//   PopulateBenchmarks.ParallelLinqPopulate: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: PopulateBenchmarks.LinqPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "1c0ef377-c8d1-4576-b137-c92c2dff05a4.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.LinqPopulate" --job "Default" --benchmarkId 0 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\1c0ef377-c8d1-4576-b137-c92c2dff05a4\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 291400.00 ns, 291.4000 us/op
WorkloadJitting  1: 1 op, 6169800.00 ns, 6.1698 ms/op

OverheadJitting  2: 16 op, 283000.00 ns, 17.6875 us/op
WorkloadJitting  2: 16 op, 71327400.00 ns, 4.4580 ms/op

WorkloadPilot    1: 16 op, 70608300.00 ns, 4.4130 ms/op
WorkloadPilot    2: 32 op, 136630100.00 ns, 4.2697 ms/op
WorkloadPilot    3: 64 op, 242746700.00 ns, 3.7929 ms/op
WorkloadPilot    4: 128 op, 484456500.00 ns, 3.7848 ms/op
WorkloadPilot    5: 256 op, 974465900.00 ns, 3.8065 ms/op

OverheadWarmup   1: 256 op, 3800.00 ns, 14.8438 ns/op
OverheadWarmup   2: 256 op, 800.00 ns, 3.1250 ns/op
OverheadWarmup   3: 256 op, 1100.00 ns, 4.2969 ns/op
OverheadWarmup   4: 256 op, 900.00 ns, 3.5156 ns/op
OverheadWarmup   5: 256 op, 900.00 ns, 3.5156 ns/op
OverheadWarmup   6: 256 op, 800.00 ns, 3.1250 ns/op

OverheadActual   1: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual   2: 256 op, 700.00 ns, 2.7344 ns/op
OverheadActual   3: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual   4: 256 op, 1200.00 ns, 4.6875 ns/op
OverheadActual   5: 256 op, 900.00 ns, 3.5156 ns/op
OverheadActual   6: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual   7: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual   8: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual   9: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  10: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  11: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  12: 256 op, 700.00 ns, 2.7344 ns/op
OverheadActual  13: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  14: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  15: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  16: 256 op, 900.00 ns, 3.5156 ns/op
OverheadActual  17: 256 op, 800.00 ns, 3.1250 ns/op
OverheadActual  18: 256 op, 800.00 ns, 3.1250 ns/op

WorkloadWarmup   1: 256 op, 973806000.00 ns, 3.8039 ms/op
WorkloadWarmup   2: 256 op, 986261700.00 ns, 3.8526 ms/op
WorkloadWarmup   3: 256 op, 980731500.00 ns, 3.8310 ms/op
WorkloadWarmup   4: 256 op, 993140100.00 ns, 3.8795 ms/op
WorkloadWarmup   5: 256 op, 970001000.00 ns, 3.7891 ms/op
WorkloadWarmup   6: 256 op, 964483100.00 ns, 3.7675 ms/op

// BeforeActualRun
WorkloadActual   1: 256 op, 1000025300.00 ns, 3.9063 ms/op
WorkloadActual   2: 256 op, 977863300.00 ns, 3.8198 ms/op
WorkloadActual   3: 256 op, 989383200.00 ns, 3.8648 ms/op
WorkloadActual   4: 256 op, 970569200.00 ns, 3.7913 ms/op
WorkloadActual   5: 256 op, 967424300.00 ns, 3.7790 ms/op
WorkloadActual   6: 256 op, 972932900.00 ns, 3.8005 ms/op
WorkloadActual   7: 256 op, 961917300.00 ns, 3.7575 ms/op
WorkloadActual   8: 256 op, 975373400.00 ns, 3.8101 ms/op
WorkloadActual   9: 256 op, 978351900.00 ns, 3.8217 ms/op
WorkloadActual  10: 256 op, 1104592000.00 ns, 4.3148 ms/op
WorkloadActual  11: 256 op, 974207900.00 ns, 3.8055 ms/op
WorkloadActual  12: 256 op, 982068100.00 ns, 3.8362 ms/op
WorkloadActual  13: 256 op, 985213800.00 ns, 3.8485 ms/op
WorkloadActual  14: 256 op, 982456600.00 ns, 3.8377 ms/op
WorkloadActual  15: 256 op, 980110700.00 ns, 3.8286 ms/op

// AfterActualRun
WorkloadResult   1: 256 op, 1000024500.00 ns, 3.9063 ms/op
WorkloadResult   2: 256 op, 977862500.00 ns, 3.8198 ms/op
WorkloadResult   3: 256 op, 989382400.00 ns, 3.8648 ms/op
WorkloadResult   4: 256 op, 970568400.00 ns, 3.7913 ms/op
WorkloadResult   5: 256 op, 967423500.00 ns, 3.7790 ms/op
WorkloadResult   6: 256 op, 972932100.00 ns, 3.8005 ms/op
WorkloadResult   7: 256 op, 961916500.00 ns, 3.7575 ms/op
WorkloadResult   8: 256 op, 975372600.00 ns, 3.8100 ms/op
WorkloadResult   9: 256 op, 978351100.00 ns, 3.8217 ms/op
WorkloadResult  10: 256 op, 974207100.00 ns, 3.8055 ms/op
WorkloadResult  11: 256 op, 982067300.00 ns, 3.8362 ms/op
WorkloadResult  12: 256 op, 985213000.00 ns, 3.8485 ms/op
WorkloadResult  13: 256 op, 982455800.00 ns, 3.8377 ms/op
WorkloadResult  14: 256 op, 980109900.00 ns, 3.8286 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 3.8220 ms, StdErr = 0.0099 ms (0.26%); N = 14, StdDev = 0.0372 ms
Min = 3.7575 ms, Q1 = 3.8005 ms, Median = 3.8207 ms, Q3 = 3.8377 ms, Max = 3.9063 ms
IQR = 0.0372 ms, LowerFence = 3.7447 ms, UpperFence = 3.8935 ms
ConfidenceInterval = [3.7800 ms; 3.8639 ms] (CI 99.9%), Margin = 0.0419 ms (1.10% of Mean)
Skewness = 0.44, Kurtosis = 2.86, MValue = 2

// **************************
// Benchmark: PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "1c0ef377-c8d1-4576-b137-c92c2dff05a4.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ParallelLinqPopulate" --job "Default" --benchmarkId 1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\1c0ef377-c8d1-4576-b137-c92c2dff05a4\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 281800.00 ns, 281.8000 us/op
WorkloadJitting  1: 1 op, 48348600.00 ns, 48.3486 ms/op

WorkloadPilot    1: 2 op, 62213800.00 ns, 31.1069 ms/op
WorkloadPilot    2: 3 op, 107944200.00 ns, 35.9814 ms/op
WorkloadPilot    3: 4 op, 121573200.00 ns, 30.3933 ms/op
WorkloadPilot    4: 5 op, 108049700.00 ns, 21.6099 ms/op
WorkloadPilot    5: 6 op, 125956000.00 ns, 20.9927 ms/op
WorkloadPilot    6: 7 op, 150157800.00 ns, 21.4511 ms/op
WorkloadPilot    7: 8 op, 164221000.00 ns, 20.5276 ms/op
WorkloadPilot    8: 9 op, 195520800.00 ns, 21.7245 ms/op
WorkloadPilot    9: 10 op, 236371700.00 ns, 23.6372 ms/op
WorkloadPilot   10: 11 op, 216995300.00 ns, 19.7268 ms/op
WorkloadPilot   11: 12 op, 255618900.00 ns, 21.3016 ms/op
WorkloadPilot   12: 13 op, 277456600.00 ns, 21.3428 ms/op
WorkloadPilot   13: 14 op, 300244600.00 ns, 21.4460 ms/op
WorkloadPilot   14: 15 op, 304730600.00 ns, 20.3154 ms/op
WorkloadPilot   15: 16 op, 336910600.00 ns, 21.0569 ms/op
WorkloadPilot   16: 32 op, 653914200.00 ns, 20.4348 ms/op

WorkloadWarmup   1: 32 op, 654073100.00 ns, 20.4398 ms/op
WorkloadWarmup   2: 32 op, 668996400.00 ns, 20.9061 ms/op
WorkloadWarmup   3: 32 op, 650435700.00 ns, 20.3261 ms/op
WorkloadWarmup   4: 32 op, 652735600.00 ns, 20.3980 ms/op
WorkloadWarmup   5: 32 op, 658842600.00 ns, 20.5888 ms/op
WorkloadWarmup   6: 32 op, 673111600.00 ns, 21.0347 ms/op
WorkloadWarmup   7: 32 op, 706538500.00 ns, 22.0793 ms/op
WorkloadWarmup   8: 32 op, 672410900.00 ns, 21.0128 ms/op

// BeforeActualRun
WorkloadActual   1: 32 op, 666654700.00 ns, 20.8330 ms/op
WorkloadActual   2: 32 op, 667080100.00 ns, 20.8463 ms/op
WorkloadActual   3: 32 op, 671066700.00 ns, 20.9708 ms/op
WorkloadActual   4: 32 op, 668503300.00 ns, 20.8907 ms/op
WorkloadActual   5: 32 op, 675251100.00 ns, 21.1016 ms/op
WorkloadActual   6: 32 op, 652039700.00 ns, 20.3762 ms/op
WorkloadActual   7: 32 op, 692978300.00 ns, 21.6556 ms/op
WorkloadActual   8: 32 op, 661159900.00 ns, 20.6612 ms/op
WorkloadActual   9: 32 op, 701643700.00 ns, 21.9264 ms/op
WorkloadActual  10: 32 op, 665196300.00 ns, 20.7874 ms/op
WorkloadActual  11: 32 op, 656361900.00 ns, 20.5113 ms/op
WorkloadActual  12: 32 op, 645965400.00 ns, 20.1864 ms/op
WorkloadActual  13: 32 op, 644069900.00 ns, 20.1272 ms/op
WorkloadActual  14: 32 op, 654583000.00 ns, 20.4557 ms/op
WorkloadActual  15: 32 op, 631415700.00 ns, 19.7317 ms/op
WorkloadActual  16: 32 op, 656933400.00 ns, 20.5292 ms/op
WorkloadActual  17: 32 op, 630753300.00 ns, 19.7110 ms/op
WorkloadActual  18: 32 op, 689922200.00 ns, 21.5601 ms/op
WorkloadActual  19: 32 op, 680717600.00 ns, 21.2724 ms/op
WorkloadActual  20: 32 op, 679683000.00 ns, 21.2401 ms/op
WorkloadActual  21: 32 op, 655097400.00 ns, 20.4718 ms/op
WorkloadActual  22: 32 op, 680470900.00 ns, 21.2647 ms/op
WorkloadActual  23: 32 op, 660663700.00 ns, 20.6457 ms/op
WorkloadActual  24: 32 op, 675822300.00 ns, 21.1194 ms/op
WorkloadActual  25: 32 op, 663747600.00 ns, 20.7421 ms/op

// AfterActualRun
WorkloadResult   1: 32 op, 666654700.00 ns, 20.8330 ms/op
WorkloadResult   2: 32 op, 667080100.00 ns, 20.8463 ms/op
WorkloadResult   3: 32 op, 671066700.00 ns, 20.9708 ms/op
WorkloadResult   4: 32 op, 668503300.00 ns, 20.8907 ms/op
WorkloadResult   5: 32 op, 675251100.00 ns, 21.1016 ms/op
WorkloadResult   6: 32 op, 652039700.00 ns, 20.3762 ms/op
WorkloadResult   7: 32 op, 692978300.00 ns, 21.6556 ms/op
WorkloadResult   8: 32 op, 661159900.00 ns, 20.6612 ms/op
WorkloadResult   9: 32 op, 701643700.00 ns, 21.9264 ms/op
WorkloadResult  10: 32 op, 665196300.00 ns, 20.7874 ms/op
WorkloadResult  11: 32 op, 656361900.00 ns, 20.5113 ms/op
WorkloadResult  12: 32 op, 645965400.00 ns, 20.1864 ms/op
WorkloadResult  13: 32 op, 644069900.00 ns, 20.1272 ms/op
WorkloadResult  14: 32 op, 654583000.00 ns, 20.4557 ms/op
WorkloadResult  15: 32 op, 631415700.00 ns, 19.7317 ms/op
WorkloadResult  16: 32 op, 656933400.00 ns, 20.5292 ms/op
WorkloadResult  17: 32 op, 630753300.00 ns, 19.7110 ms/op
WorkloadResult  18: 32 op, 689922200.00 ns, 21.5601 ms/op
WorkloadResult  19: 32 op, 680717600.00 ns, 21.2724 ms/op
WorkloadResult  20: 32 op, 679683000.00 ns, 21.2401 ms/op
WorkloadResult  21: 32 op, 655097400.00 ns, 20.4718 ms/op
WorkloadResult  22: 32 op, 680470900.00 ns, 21.2647 ms/op
WorkloadResult  23: 32 op, 660663700.00 ns, 20.6457 ms/op
WorkloadResult  24: 32 op, 675822300.00 ns, 21.1194 ms/op
WorkloadResult  25: 32 op, 663747600.00 ns, 20.7421 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 20.7847 ms, StdErr = 0.1096 ms (0.53%); N = 25, StdDev = 0.5479 ms
Min = 19.7110 ms, Q1 = 20.4638 ms, Median = 20.7874 ms, Q3 = 21.1798 ms, Max = 21.9264 ms
IQR = 0.7160 ms, LowerFence = 19.3897 ms, UpperFence = 22.2538 ms
ConfidenceInterval = [20.3743 ms; 21.1951 ms] (CI 99.9%), Margin = 0.4104 ms (1.97% of Mean)
Skewness = -0.02, Kurtosis = 2.55, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report.html

// * Detailed results *
PopulateBenchmarks.LinqPopulate: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 3.8220 ms, StdErr = 0.0099 ms (0.26%); N = 14, StdDev = 0.0372 ms
Min = 3.7575 ms, Q1 = 3.8005 ms, Median = 3.8207 ms, Q3 = 3.8377 ms, Max = 3.9063 ms
IQR = 0.0372 ms, LowerFence = 3.7447 ms, UpperFence = 3.8935 ms
ConfidenceInterval = [3.7800 ms; 3.8639 ms] (CI 99.9%), Margin = 0.0419 ms (1.10% of Mean)
Skewness = 0.44, Kurtosis = 2.86, MValue = 2
-------------------- Histogram --------------------
[3.744 ms ; 3.920 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 20.7847 ms, StdErr = 0.1096 ms (0.53%); N = 25, StdDev = 0.5479 ms
Min = 19.7110 ms, Q1 = 20.4638 ms, Median = 20.7874 ms, Q3 = 21.1798 ms, Max = 21.9264 ms
IQR = 0.7160 ms, LowerFence = 19.3897 ms, UpperFence = 22.2538 ms
ConfidenceInterval = [20.3743 ms; 21.1951 ms] (CI 99.9%), Margin = 0.4104 ms (1.97% of Mean)
Skewness = -0.02, Kurtosis = 2.55, MValue = 2
-------------------- Histogram --------------------
[19.547 ms ; 20.248 ms) | @@@@
[20.248 ms ; 21.016 ms) | @@@@@@@@@@@@@
[21.016 ms ; 22.090 ms) | @@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.18362
AMD Ryzen 5 1600, 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=3.0.100
  [Host]     : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT  [AttachedDebugger]
  DefaultJob : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT


|               Method |      Mean |     Error |    StdDev |
|--------------------- |----------:|----------:|----------:|
|         LinqPopulate |  3.822 ms | 0.0419 ms | 0.0372 ms |
| ParallelLinqPopulate | 20.785 ms | 0.4104 ms | 0.5479 ms |

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger

// * Hints *
Outliers
  PopulateBenchmarks.LinqPopulate: Default -> 1 outlier  was  removed (4.31 ms)

// * Legends *
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  1 ms   : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:49 (49.85 sec), executed benchmarks: 2

Global total time: 00:00:54 (54.11 sec), executed benchmarks: 2
// * Artifacts cleanup *

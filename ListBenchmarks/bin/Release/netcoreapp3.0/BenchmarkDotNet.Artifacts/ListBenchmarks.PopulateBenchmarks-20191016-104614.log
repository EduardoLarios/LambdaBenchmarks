// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 5 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da
// command took 2.1s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da
// command took 2.82s and exited with 0
// ***** Done, took 00:00:05 (5.2 sec)   *****
// Found 5 benchmarks:
//   PopulateBenchmarks.LinqPopulate: DefaultJob
//   PopulateBenchmarks.ForLoopPopulate: DefaultJob
//   PopulateBenchmarks.ForEachPopulate: DefaultJob
//   PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
//   PopulateBenchmarks.ParallelForEachLoop: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: PopulateBenchmarks.LinqPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e180f6be-7f6b-4fdb-815c-b1eae89192da.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.LinqPopulate" --job "Default" --benchmarkId 0 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 392600.00 ns, 392.6000 us/op
WorkloadJitting  1: 1 op, 362400.00 ns, 362.4000 us/op

OverheadJitting  2: 16 op, 802800.00 ns, 50.1750 us/op
WorkloadJitting  2: 16 op, 768300.00 ns, 48.0187 us/op

WorkloadPilot    1: 16 op, 13100.00 ns, 818.7500 ns/op
WorkloadPilot    2: 32 op, 23900.00 ns, 746.8750 ns/op
WorkloadPilot    3: 64 op, 58900.00 ns, 920.3125 ns/op
WorkloadPilot    4: 128 op, 142900.00 ns, 1.1164 us/op
WorkloadPilot    5: 256 op, 323200.00 ns, 1.2625 us/op
WorkloadPilot    6: 512 op, 642300.00 ns, 1.2545 us/op
WorkloadPilot    7: 1024 op, 1251900.00 ns, 1.2226 us/op
WorkloadPilot    8: 2048 op, 2581600.00 ns, 1.2605 us/op
WorkloadPilot    9: 4096 op, 5200500.00 ns, 1.2697 us/op
WorkloadPilot   10: 8192 op, 10857800.00 ns, 1.3254 us/op
WorkloadPilot   11: 16384 op, 21074100.00 ns, 1.2863 us/op
WorkloadPilot   12: 32768 op, 43097300.00 ns, 1.3152 us/op
WorkloadPilot   13: 65536 op, 85383100.00 ns, 1.3028 us/op
WorkloadPilot   14: 131072 op, 161990500.00 ns, 1.2359 us/op
WorkloadPilot   15: 262144 op, 263646800.00 ns, 1.0057 us/op
WorkloadPilot   16: 524288 op, 541573800.00 ns, 1.0330 us/op

OverheadWarmup   1: 524288 op, 2096900.00 ns, 3.9995 ns/op
OverheadWarmup   2: 524288 op, 2094000.00 ns, 3.9940 ns/op
OverheadWarmup   3: 524288 op, 2094000.00 ns, 3.9940 ns/op
OverheadWarmup   4: 524288 op, 2100200.00 ns, 4.0058 ns/op
OverheadWarmup   5: 524288 op, 2116400.00 ns, 4.0367 ns/op
OverheadWarmup   6: 524288 op, 2095000.00 ns, 3.9959 ns/op
OverheadWarmup   7: 524288 op, 2094700.00 ns, 3.9953 ns/op
OverheadWarmup   8: 524288 op, 2094300.00 ns, 3.9946 ns/op
OverheadWarmup   9: 524288 op, 2094200.00 ns, 3.9944 ns/op
OverheadWarmup  10: 524288 op, 2098200.00 ns, 4.0020 ns/op

OverheadActual   1: 524288 op, 2101600.00 ns, 4.0085 ns/op
OverheadActual   2: 524288 op, 2093900.00 ns, 3.9938 ns/op
OverheadActual   3: 524288 op, 2093900.00 ns, 3.9938 ns/op
OverheadActual   4: 524288 op, 2150500.00 ns, 4.1018 ns/op
OverheadActual   5: 524288 op, 2094400.00 ns, 3.9948 ns/op
OverheadActual   6: 524288 op, 2093900.00 ns, 3.9938 ns/op
OverheadActual   7: 524288 op, 2099800.00 ns, 4.0051 ns/op
OverheadActual   8: 524288 op, 2097900.00 ns, 4.0014 ns/op
OverheadActual   9: 524288 op, 2093700.00 ns, 3.9934 ns/op
OverheadActual  10: 524288 op, 2094100.00 ns, 3.9942 ns/op
OverheadActual  11: 524288 op, 2142400.00 ns, 4.0863 ns/op
OverheadActual  12: 524288 op, 2108100.00 ns, 4.0209 ns/op
OverheadActual  13: 524288 op, 2162800.00 ns, 4.1252 ns/op
OverheadActual  14: 524288 op, 2119600.00 ns, 4.0428 ns/op
OverheadActual  15: 524288 op, 2094200.00 ns, 3.9944 ns/op

WorkloadWarmup   1: 524288 op, 393700400.00 ns, 750.9239 ns/op
WorkloadWarmup   2: 524288 op, 676567800.00 ns, 1.2905 us/op
WorkloadWarmup   3: 524288 op, 395779000.00 ns, 754.8885 ns/op
WorkloadWarmup   4: 524288 op, 389178900.00 ns, 742.2998 ns/op
WorkloadWarmup   5: 524288 op, 398693600.00 ns, 760.4477 ns/op
WorkloadWarmup   6: 524288 op, 976628200.00 ns, 1.8628 us/op
WorkloadWarmup   7: 524288 op, 405562200.00 ns, 773.5485 ns/op

// BeforeActualRun
WorkloadActual   1: 524288 op, 393225500.00 ns, 750.0181 ns/op
WorkloadActual   2: 524288 op, 395496400.00 ns, 754.3495 ns/op
WorkloadActual   3: 524288 op, 392125200.00 ns, 747.9195 ns/op
WorkloadActual   4: 524288 op, 394623800.00 ns, 752.6852 ns/op
WorkloadActual   5: 524288 op, 386806400.00 ns, 737.7747 ns/op
WorkloadActual   6: 524288 op, 393900800.00 ns, 751.3062 ns/op
WorkloadActual   7: 524288 op, 1602968000.00 ns, 3.0574 us/op
WorkloadActual   8: 524288 op, 397502000.00 ns, 758.1749 ns/op
WorkloadActual   9: 524288 op, 403111800.00 ns, 768.8747 ns/op
WorkloadActual  10: 524288 op, 392557300.00 ns, 748.7436 ns/op
WorkloadActual  11: 524288 op, 391810900.00 ns, 747.3200 ns/op
WorkloadActual  12: 524288 op, 396238600.00 ns, 755.7652 ns/op
WorkloadActual  13: 524288 op, 385969900.00 ns, 736.1792 ns/op
WorkloadActual  14: 524288 op, 392613900.00 ns, 748.8516 ns/op
WorkloadActual  15: 524288 op, 395915100.00 ns, 755.1481 ns/op

// AfterActualRun
WorkloadResult   1: 524288 op, 391127600.00 ns, 746.0167 ns/op
WorkloadResult   2: 524288 op, 393398500.00 ns, 750.3481 ns/op
WorkloadResult   3: 524288 op, 390027300.00 ns, 743.9180 ns/op
WorkloadResult   4: 524288 op, 392525900.00 ns, 748.6837 ns/op
WorkloadResult   5: 524288 op, 384708500.00 ns, 733.7732 ns/op
WorkloadResult   6: 524288 op, 391802900.00 ns, 747.3047 ns/op
WorkloadResult   7: 524288 op, 395404100.00 ns, 754.1735 ns/op
WorkloadResult   8: 524288 op, 390459400.00 ns, 744.7422 ns/op
WorkloadResult   9: 524288 op, 389713000.00 ns, 743.3186 ns/op
WorkloadResult  10: 524288 op, 394140700.00 ns, 751.7637 ns/op
WorkloadResult  11: 524288 op, 383872000.00 ns, 732.1777 ns/op
WorkloadResult  12: 524288 op, 390516000.00 ns, 744.8502 ns/op
WorkloadResult  13: 524288 op, 393817200.00 ns, 751.1467 ns/op
GC:  0 0 0 0 0

// AfterAll

Mean = 745.5552 ns, StdErr = 1.8023 ns (0.24%); N = 13, StdDev = 6.4983 ns
Min = 732.1777 ns, Q1 = 743.6183 ns, Median = 746.0167 ns, Q3 = 750.7474 ns, Max = 754.1735 ns
IQR = 7.1291 ns, LowerFence = 732.9247 ns, UpperFence = 761.4410 ns
ConfidenceInterval = [737.7732 ns; 753.3371 ns] (CI 99.9%), Margin = 7.7819 ns (1.04% of Mean)
Skewness = -0.8, Kurtosis = 2.59, MValue = 2

// **************************
// Benchmark: PopulateBenchmarks.ForLoopPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e180f6be-7f6b-4fdb-815c-b1eae89192da.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ForLoopPopulate" --job "Default" --benchmarkId 1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 403900.00 ns, 403.9000 us/op
WorkloadJitting  1: 1 op, 561700.00 ns, 561.7000 us/op

OverheadJitting  2: 16 op, 811300.00 ns, 50.7062 us/op
WorkloadJitting  2: 16 op, 962200.00 ns, 60.1375 us/op

WorkloadPilot    1: 16 op, 9700.00 ns, 606.2500 ns/op
WorkloadPilot    2: 32 op, 13700.00 ns, 428.1250 ns/op
WorkloadPilot    3: 64 op, 45800.00 ns, 715.6250 ns/op
WorkloadPilot    4: 128 op, 90200.00 ns, 704.6875 ns/op
WorkloadPilot    5: 256 op, 176100.00 ns, 687.8906 ns/op
WorkloadPilot    6: 512 op, 380700.00 ns, 743.5547 ns/op
WorkloadPilot    7: 1024 op, 711000.00 ns, 694.3359 ns/op
WorkloadPilot    8: 2048 op, 1513200.00 ns, 738.8672 ns/op
WorkloadPilot    9: 4096 op, 3083500.00 ns, 752.8076 ns/op
WorkloadPilot   10: 8192 op, 6426000.00 ns, 784.4238 ns/op
WorkloadPilot   11: 16384 op, 12430000.00 ns, 758.6670 ns/op
WorkloadPilot   12: 32768 op, 24833300.00 ns, 757.8522 ns/op
WorkloadPilot   13: 65536 op, 51938300.00 ns, 792.5156 ns/op
WorkloadPilot   14: 131072 op, 98423400.00 ns, 750.9109 ns/op
WorkloadPilot   15: 262144 op, 213199000.00 ns, 813.2896 ns/op
WorkloadPilot   16: 524288 op, 416363800.00 ns, 794.1509 ns/op
WorkloadPilot   17: 1048576 op, 882110200.00 ns, 841.2458 ns/op

OverheadWarmup   1: 1048576 op, 4248300.00 ns, 4.0515 ns/op
OverheadWarmup   2: 1048576 op, 4148300.00 ns, 3.9561 ns/op
OverheadWarmup   3: 1048576 op, 4176100.00 ns, 3.9826 ns/op
OverheadWarmup   4: 1048576 op, 4148400.00 ns, 3.9562 ns/op
OverheadWarmup   5: 1048576 op, 4157000.00 ns, 3.9644 ns/op
OverheadWarmup   6: 1048576 op, 4149200.00 ns, 3.9570 ns/op

OverheadActual   1: 1048576 op, 4148600.00 ns, 3.9564 ns/op
OverheadActual   2: 1048576 op, 4149500.00 ns, 3.9573 ns/op
OverheadActual   3: 1048576 op, 4175700.00 ns, 3.9823 ns/op
OverheadActual   4: 1048576 op, 4148200.00 ns, 3.9560 ns/op
OverheadActual   5: 1048576 op, 4154100.00 ns, 3.9617 ns/op
OverheadActual   6: 1048576 op, 4153300.00 ns, 3.9609 ns/op
OverheadActual   7: 1048576 op, 4155600.00 ns, 3.9631 ns/op
OverheadActual   8: 1048576 op, 4175800.00 ns, 3.9824 ns/op
OverheadActual   9: 1048576 op, 4155200.00 ns, 3.9627 ns/op
OverheadActual  10: 1048576 op, 4148700.00 ns, 3.9565 ns/op
OverheadActual  11: 1048576 op, 4251400.00 ns, 4.0545 ns/op
OverheadActual  12: 1048576 op, 4250200.00 ns, 4.0533 ns/op
OverheadActual  13: 1048576 op, 4246900.00 ns, 4.0502 ns/op
OverheadActual  14: 1048576 op, 4391000.00 ns, 4.1876 ns/op
OverheadActual  15: 1048576 op, 4171400.00 ns, 3.9782 ns/op

WorkloadWarmup   1: 1048576 op, 576291200.00 ns, 549.5941 ns/op
WorkloadWarmup   2: 1048576 op, 1096920400.00 ns, 1.0461 us/op
WorkloadWarmup   3: 1048576 op, 589374800.00 ns, 562.0716 ns/op
WorkloadWarmup   4: 1048576 op, 513888800.00 ns, 490.0826 ns/op
WorkloadWarmup   5: 1048576 op, 578949500.00 ns, 552.1293 ns/op
WorkloadWarmup   6: 1048576 op, 1744695800.00 ns, 1.6639 us/op
WorkloadWarmup   7: 1048576 op, 555983500.00 ns, 530.2272 ns/op

// BeforeActualRun
WorkloadActual   1: 1048576 op, 592681800.00 ns, 565.2254 ns/op
WorkloadActual   2: 1048576 op, 472649700.00 ns, 450.7539 ns/op
WorkloadActual   3: 1048576 op, 591025800.00 ns, 563.6461 ns/op
WorkloadActual   4: 1048576 op, 593874700.00 ns, 566.3630 ns/op
WorkloadActual   5: 1048576 op, 498116900.00 ns, 475.0413 ns/op
WorkloadActual   6: 1048576 op, 601241200.00 ns, 573.3883 ns/op
WorkloadActual   7: 1048576 op, 6069627200.00 ns, 5.7884 us/op
WorkloadActual   8: 1048576 op, 648635400.00 ns, 618.5869 ns/op
WorkloadActual   9: 1048576 op, 614688700.00 ns, 586.2128 ns/op
WorkloadActual  10: 1048576 op, 631130800.00 ns, 601.8932 ns/op
WorkloadActual  11: 1048576 op, 625936900.00 ns, 596.9399 ns/op

OutOfMemoryException!
BenchmarkDotNet continues to run additional iterations until desired accuracy level is achieved. It's possible only if the benchmark method doesn't have any side-effects.
If your benchmark allocates memory and keeps it alive, you are creating a memory leak.
You should redesign your benchmark and remove the side-effects. You can use `OperationsPerInvoke`, `IterationSetup` and `IterationCleanup` to do that.

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.OutOfMemoryException: Array dimensions exceeded supported range.
   at System.Collections.Generic.List`1.set_Capacity(Int32 value)
   at System.Collections.Generic.List`1.EnsureCapacity(Int32 min)
   at System.Collections.Generic.List`1.AddWithResize(T item)
   at ListBenchmarks.PopulateBenchmarks.ForLoopPopulate() in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\Program.cs:line 96
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionUnroll(Int64 invokeCount) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da\e180f6be-7f6b-4fdb-815c-b1eae89192da.notcs:line 1123
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.RunAuto(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.Run(Int64 invokeCount, IterationMode iterationMode, Boolean runAuto, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.EngineActualStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da\e180f6be-7f6b-4fdb-815c-b1eae89192da.notcs:line 815
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da\e180f6be-7f6b-4fdb-815c-b1eae89192da.notcs:line 52
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: PopulateBenchmarks.ForEachPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e180f6be-7f6b-4fdb-815c-b1eae89192da.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ForEachPopulate" --job "Default" --benchmarkId 2 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 397300.00 ns, 397.3000 us/op
WorkloadJitting  1: 1 op, 798700.00 ns, 798.7000 us/op

OverheadJitting  2: 16 op, 803600.00 ns, 50.2250 us/op
WorkloadJitting  2: 16 op, 765000.00 ns, 47.8125 us/op

WorkloadPilot    1: 16 op, 8700.00 ns, 543.7500 ns/op
WorkloadPilot    2: 32 op, 21800.00 ns, 681.2500 ns/op
WorkloadPilot    3: 64 op, 49900.00 ns, 779.6875 ns/op
WorkloadPilot    4: 128 op, 101700.00 ns, 794.5312 ns/op
WorkloadPilot    5: 256 op, 206000.00 ns, 804.6875 ns/op
WorkloadPilot    6: 512 op, 416600.00 ns, 813.6719 ns/op
WorkloadPilot    7: 1024 op, 854000.00 ns, 833.9844 ns/op
WorkloadPilot    8: 2048 op, 1767300.00 ns, 862.9395 ns/op
WorkloadPilot    9: 4096 op, 3588800.00 ns, 876.1719 ns/op
WorkloadPilot   10: 8192 op, 7243000.00 ns, 884.1553 ns/op
WorkloadPilot   11: 16384 op, 14146900.00 ns, 863.4583 ns/op
WorkloadPilot   12: 32768 op, 29111900.00 ns, 888.4247 ns/op
WorkloadPilot   13: 65536 op, 58300400.00 ns, 889.5935 ns/op
WorkloadPilot   14: 131072 op, 114097700.00 ns, 870.4964 ns/op
WorkloadPilot   15: 262144 op, 224563900.00 ns, 856.6433 ns/op
WorkloadPilot   16: 524288 op, 461157400.00 ns, 879.5879 ns/op
WorkloadPilot   17: 1048576 op, 871275200.00 ns, 830.9128 ns/op

OverheadWarmup   1: 1048576 op, 4249600.00 ns, 4.0527 ns/op
OverheadWarmup   2: 1048576 op, 4193100.00 ns, 3.9989 ns/op
OverheadWarmup   3: 1048576 op, 4197300.00 ns, 4.0029 ns/op
OverheadWarmup   4: 1048576 op, 4192200.00 ns, 3.9980 ns/op
OverheadWarmup   5: 1048576 op, 4200000.00 ns, 4.0054 ns/op
OverheadWarmup   6: 1048576 op, 4207900.00 ns, 4.0130 ns/op
OverheadWarmup   7: 1048576 op, 4201600.00 ns, 4.0070 ns/op

OverheadActual   1: 1048576 op, 4192900.00 ns, 3.9987 ns/op
OverheadActual   2: 1048576 op, 4206500.00 ns, 4.0116 ns/op
OverheadActual   3: 1048576 op, 4189200.00 ns, 3.9951 ns/op
OverheadActual   4: 1048576 op, 4208400.00 ns, 4.0134 ns/op
OverheadActual   5: 1048576 op, 4190300.00 ns, 3.9962 ns/op
OverheadActual   6: 1048576 op, 4201300.00 ns, 4.0067 ns/op
OverheadActual   7: 1048576 op, 4484700.00 ns, 4.2769 ns/op
OverheadActual   8: 1048576 op, 4190800.00 ns, 3.9967 ns/op
OverheadActual   9: 1048576 op, 4191800.00 ns, 3.9976 ns/op
OverheadActual  10: 1048576 op, 4190700.00 ns, 3.9966 ns/op
OverheadActual  11: 1048576 op, 4235100.00 ns, 4.0389 ns/op
OverheadActual  12: 1048576 op, 4202900.00 ns, 4.0082 ns/op
OverheadActual  13: 1048576 op, 4189000.00 ns, 3.9949 ns/op
OverheadActual  14: 1048576 op, 4198500.00 ns, 4.0040 ns/op
OverheadActual  15: 1048576 op, 4193200.00 ns, 3.9989 ns/op

WorkloadWarmup   1: 1048576 op, 592231400.00 ns, 564.7959 ns/op
WorkloadWarmup   2: 1048576 op, 1184456800.00 ns, 1.1296 us/op
WorkloadWarmup   3: 1048576 op, 572678600.00 ns, 546.1489 ns/op
WorkloadWarmup   4: 1048576 op, 569476700.00 ns, 543.0953 ns/op
WorkloadWarmup   5: 1048576 op, 587924600.00 ns, 560.6886 ns/op
WorkloadWarmup   6: 1048576 op, 1749137300.00 ns, 1.6681 us/op
WorkloadWarmup   7: 1048576 op, 582452300.00 ns, 555.4698 ns/op

// BeforeActualRun
WorkloadActual   1: 1048576 op, 590887800.00 ns, 563.5145 ns/op
WorkloadActual   2: 1048576 op, 565115600.00 ns, 538.9362 ns/op
WorkloadActual   3: 1048576 op, 553699900.00 ns, 528.0494 ns/op
WorkloadActual   4: 1048576 op, 556464700.00 ns, 530.6861 ns/op
WorkloadActual   5: 1048576 op, 554227300.00 ns, 528.5523 ns/op
WorkloadActual   6: 1048576 op, 590635900.00 ns, 563.2743 ns/op
WorkloadActual   7: 1048576 op, 5039284100.00 ns, 4.8058 us/op
WorkloadActual   8: 1048576 op, 590228300.00 ns, 562.8856 ns/op
WorkloadActual   9: 1048576 op, 582280800.00 ns, 555.3062 ns/op
WorkloadActual  10: 1048576 op, 587752700.00 ns, 560.5247 ns/op
WorkloadActual  11: 1048576 op, 566351200.00 ns, 540.1146 ns/op

OutOfMemoryException!
BenchmarkDotNet continues to run additional iterations until desired accuracy level is achieved. It's possible only if the benchmark method doesn't have any side-effects.
If your benchmark allocates memory and keeps it alive, you are creating a memory leak.
You should redesign your benchmark and remove the side-effects. You can use `OperationsPerInvoke`, `IterationSetup` and `IterationCleanup` to do that.

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.OutOfMemoryException: Array dimensions exceeded supported range.
   at System.Collections.Generic.List`1.set_Capacity(Int32 value)
   at System.Collections.Generic.List`1.EnsureCapacity(Int32 min)
   at System.Collections.Generic.List`1.AddWithResize(T item)
   at ListBenchmarks.PopulateBenchmarks.ForEachPopulate() in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\Program.cs:line 109
   at BenchmarkDotNet.Autogenerated.Runnable_2.WorkloadActionUnroll(Int64 invokeCount) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da\e180f6be-7f6b-4fdb-815c-b1eae89192da.notcs:line 1767
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.RunAuto(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.Run(Int64 invokeCount, IterationMode iterationMode, Boolean runAuto, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.EngineActualStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_2.Run(IHost host, String benchmarkName) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da\e180f6be-7f6b-4fdb-815c-b1eae89192da.notcs:line 1459
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da\e180f6be-7f6b-4fdb-815c-b1eae89192da.notcs:line 52
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e180f6be-7f6b-4fdb-815c-b1eae89192da.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ParallelLinqPopulate" --job "Default" --benchmarkId 3 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 407500.00 ns, 407.5000 us/op
WorkloadJitting  1: 1 op, 20688100.00 ns, 20.6881 ms/op

OverheadJitting  2: 16 op, 865500.00 ns, 54.0938 us/op
WorkloadJitting  2: 16 op, 1506800.00 ns, 94.1750 us/op

WorkloadPilot    1: 16 op, 339100.00 ns, 21.1938 us/op
WorkloadPilot    2: 32 op, 737500.00 ns, 23.0469 us/op
WorkloadPilot    3: 64 op, 1345600.00 ns, 21.0250 us/op
WorkloadPilot    4: 128 op, 2770700.00 ns, 21.6461 us/op
WorkloadPilot    5: 256 op, 5504300.00 ns, 21.5012 us/op
WorkloadPilot    6: 512 op, 11052400.00 ns, 21.5867 us/op
WorkloadPilot    7: 1024 op, 21301600.00 ns, 20.8023 us/op
WorkloadPilot    8: 2048 op, 40352600.00 ns, 19.7034 us/op
WorkloadPilot    9: 4096 op, 82492900.00 ns, 20.1399 us/op
WorkloadPilot   10: 8192 op, 158850800.00 ns, 19.3910 us/op
WorkloadPilot   11: 16384 op, 312236200.00 ns, 19.0574 us/op
WorkloadPilot   12: 32768 op, 581936900.00 ns, 17.7593 us/op

OverheadWarmup   1: 32768 op, 138100.00 ns, 4.2145 ns/op
OverheadWarmup   2: 32768 op, 131000.00 ns, 3.9978 ns/op
OverheadWarmup   3: 32768 op, 140000.00 ns, 4.2725 ns/op
OverheadWarmup   4: 32768 op, 131100.00 ns, 4.0009 ns/op
OverheadWarmup   5: 32768 op, 131100.00 ns, 4.0009 ns/op
OverheadWarmup   6: 32768 op, 131500.00 ns, 4.0131 ns/op

OverheadActual   1: 32768 op, 131200.00 ns, 4.0039 ns/op
OverheadActual   2: 32768 op, 158300.00 ns, 4.8309 ns/op
OverheadActual   3: 32768 op, 131200.00 ns, 4.0039 ns/op
OverheadActual   4: 32768 op, 131100.00 ns, 4.0009 ns/op
OverheadActual   5: 32768 op, 131200.00 ns, 4.0039 ns/op
OverheadActual   6: 32768 op, 141500.00 ns, 4.3182 ns/op
OverheadActual   7: 32768 op, 138100.00 ns, 4.2145 ns/op
OverheadActual   8: 32768 op, 131200.00 ns, 4.0039 ns/op
OverheadActual   9: 32768 op, 131200.00 ns, 4.0039 ns/op
OverheadActual  10: 32768 op, 143900.00 ns, 4.3915 ns/op
OverheadActual  11: 32768 op, 199400.00 ns, 6.0852 ns/op
OverheadActual  12: 32768 op, 148200.00 ns, 4.5227 ns/op
OverheadActual  13: 32768 op, 135000.00 ns, 4.1199 ns/op
OverheadActual  14: 32768 op, 131100.00 ns, 4.0009 ns/op
OverheadActual  15: 32768 op, 131200.00 ns, 4.0039 ns/op
OverheadActual  16: 32768 op, 134100.00 ns, 4.0924 ns/op
OverheadActual  17: 32768 op, 139100.00 ns, 4.2450 ns/op

WorkloadWarmup   1: 32768 op, 570508200.00 ns, 17.4105 us/op
WorkloadWarmup   2: 32768 op, 560542900.00 ns, 17.1064 us/op
WorkloadWarmup   3: 32768 op, 552810300.00 ns, 16.8704 us/op
WorkloadWarmup   4: 32768 op, 558917200.00 ns, 17.0568 us/op
WorkloadWarmup   5: 32768 op, 549029700.00 ns, 16.7551 us/op
WorkloadWarmup   6: 32768 op, 530596200.00 ns, 16.1925 us/op
WorkloadWarmup   7: 32768 op, 525364400.00 ns, 16.0328 us/op
WorkloadWarmup   8: 32768 op, 558004600.00 ns, 17.0289 us/op
WorkloadWarmup   9: 32768 op, 574107300.00 ns, 17.5204 us/op
WorkloadWarmup  10: 32768 op, 568299000.00 ns, 17.3431 us/op

// BeforeActualRun
WorkloadActual   1: 32768 op, 568470400.00 ns, 17.3483 us/op
WorkloadActual   2: 32768 op, 557516900.00 ns, 17.0141 us/op
WorkloadActual   3: 32768 op, 565762800.00 ns, 17.2657 us/op
WorkloadActual   4: 32768 op, 541494400.00 ns, 16.5251 us/op
WorkloadActual   5: 32768 op, 563519900.00 ns, 17.1973 us/op
WorkloadActual   6: 32768 op, 539789000.00 ns, 16.4731 us/op
WorkloadActual   7: 32768 op, 576071500.00 ns, 17.5803 us/op
WorkloadActual   8: 32768 op, 558535700.00 ns, 17.0452 us/op
WorkloadActual   9: 32768 op, 586017800.00 ns, 17.8838 us/op
WorkloadActual  10: 32768 op, 581336900.00 ns, 17.7410 us/op
WorkloadActual  11: 32768 op, 578201700.00 ns, 17.6453 us/op
WorkloadActual  12: 32768 op, 564905500.00 ns, 17.2395 us/op
WorkloadActual  13: 32768 op, 564298900.00 ns, 17.2210 us/op
WorkloadActual  14: 32768 op, 566220300.00 ns, 17.2797 us/op
WorkloadActual  15: 32768 op, 567962000.00 ns, 17.3328 us/op
WorkloadActual  16: 32768 op, 554751900.00 ns, 16.9297 us/op
WorkloadActual  17: 32768 op, 558748400.00 ns, 17.0516 us/op
WorkloadActual  18: 32768 op, 562729300.00 ns, 17.1731 us/op

// AfterActualRun
WorkloadResult   1: 32768 op, 568336300.00 ns, 17.3442 us/op
WorkloadResult   2: 32768 op, 557382800.00 ns, 17.0100 us/op
WorkloadResult   3: 32768 op, 565628700.00 ns, 17.2616 us/op
WorkloadResult   4: 32768 op, 541360300.00 ns, 16.5210 us/op
WorkloadResult   5: 32768 op, 563385800.00 ns, 17.1932 us/op
WorkloadResult   6: 32768 op, 539654900.00 ns, 16.4690 us/op
WorkloadResult   7: 32768 op, 575937400.00 ns, 17.5762 us/op
WorkloadResult   8: 32768 op, 558401600.00 ns, 17.0411 us/op
WorkloadResult   9: 32768 op, 581202800.00 ns, 17.7369 us/op
WorkloadResult  10: 32768 op, 578067600.00 ns, 17.6412 us/op
WorkloadResult  11: 32768 op, 564771400.00 ns, 17.2355 us/op
WorkloadResult  12: 32768 op, 564164800.00 ns, 17.2169 us/op
WorkloadResult  13: 32768 op, 566086200.00 ns, 17.2756 us/op
WorkloadResult  14: 32768 op, 567827900.00 ns, 17.3287 us/op
WorkloadResult  15: 32768 op, 554617800.00 ns, 16.9256 us/op
WorkloadResult  16: 32768 op, 558614300.00 ns, 17.0476 us/op
WorkloadResult  17: 32768 op, 562595200.00 ns, 17.1690 us/op
GC:  0 0 0 0 0

// AfterAll

Mean = 17.1761 us, StdErr = 0.0818 us (0.48%); N = 17, StdDev = 0.3372 us
Min = 16.4690 us, Q1 = 17.0255 us, Median = 17.2169 us, Q3 = 17.3365 us, Max = 17.7369 us
IQR = 0.3110 us, LowerFence = 16.5591 us, UpperFence = 17.8029 us
ConfidenceInterval = [16.8477 us; 17.5045 us] (CI 99.9%), Margin = 0.3284 us (1.91% of Mean)
Skewness = -0.47, Kurtosis = 2.79, MValue = 2

// **************************
// Benchmark: PopulateBenchmarks.ParallelForEachLoop: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e180f6be-7f6b-4fdb-815c-b1eae89192da.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ParallelForEachLoop" --job "Default" --benchmarkId 4 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e180f6be-7f6b-4fdb-815c-b1eae89192da\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 370300.00 ns, 370.3000 us/op
WorkloadJitting  1: 1 op, 12406800.00 ns, 12.4068 ms/op

OverheadJitting  2: 16 op, 918000.00 ns, 57.3750 us/op
WorkloadJitting  2: 16 op, 1325900.00 ns, 82.8688 us/op

WorkloadPilot    1: 16 op, 431000.00 ns, 26.9375 us/op
WorkloadPilot    2: 32 op, 374300.00 ns, 11.6969 us/op
WorkloadPilot    3: 64 op, 831400.00 ns, 12.9906 us/op
WorkloadPilot    4: 128 op, 1778000.00 ns, 13.8906 us/op
WorkloadPilot    5: 256 op, 3253400.00 ns, 12.7086 us/op
WorkloadPilot    6: 512 op, 6858900.00 ns, 13.3963 us/op
WorkloadPilot    7: 1024 op, 13578000.00 ns, 13.2598 us/op
WorkloadPilot    8: 2048 op, 25301700.00 ns, 12.3543 us/op
WorkloadPilot    9: 4096 op, 50312100.00 ns, 12.2832 us/op
WorkloadPilot   10: 8192 op, 101814500.00 ns, 12.4285 us/op
WorkloadPilot   11: 16384 op, 158695000.00 ns, 9.6860 us/op
WorkloadPilot   12: 32768 op, 323724100.00 ns, 9.8793 us/op
WorkloadPilot   13: 65536 op, 630987700.00 ns, 9.6281 us/op

OverheadWarmup   1: 65536 op, 264900.00 ns, 4.0421 ns/op
OverheadWarmup   2: 65536 op, 261900.00 ns, 3.9963 ns/op
OverheadWarmup   3: 65536 op, 264500.00 ns, 4.0359 ns/op
OverheadWarmup   4: 65536 op, 264200.00 ns, 4.0314 ns/op
OverheadWarmup   5: 65536 op, 261800.00 ns, 3.9948 ns/op
OverheadWarmup   6: 65536 op, 261800.00 ns, 3.9948 ns/op
OverheadWarmup   7: 65536 op, 270400.00 ns, 4.1260 ns/op

OverheadActual   1: 65536 op, 261900.00 ns, 3.9963 ns/op
OverheadActual   2: 65536 op, 261800.00 ns, 3.9948 ns/op
OverheadActual   3: 65536 op, 265400.00 ns, 4.0497 ns/op
OverheadActual   4: 65536 op, 261900.00 ns, 3.9963 ns/op
OverheadActual   5: 65536 op, 263200.00 ns, 4.0161 ns/op
OverheadActual   6: 65536 op, 261800.00 ns, 3.9948 ns/op
OverheadActual   7: 65536 op, 261800.00 ns, 3.9948 ns/op
OverheadActual   8: 65536 op, 276800.00 ns, 4.2236 ns/op
OverheadActual   9: 65536 op, 268000.00 ns, 4.0894 ns/op
OverheadActual  10: 65536 op, 261800.00 ns, 3.9948 ns/op
OverheadActual  11: 65536 op, 381900.00 ns, 5.8273 ns/op
OverheadActual  12: 65536 op, 274600.00 ns, 4.1901 ns/op
OverheadActual  13: 65536 op, 261800.00 ns, 3.9948 ns/op
OverheadActual  14: 65536 op, 261900.00 ns, 3.9963 ns/op
OverheadActual  15: 65536 op, 266800.00 ns, 4.0710 ns/op

WorkloadWarmup   1: 65536 op, 602343700.00 ns, 9.1910 us/op
WorkloadWarmup   2: 65536 op, 636693200.00 ns, 9.7152 us/op
WorkloadWarmup   3: 65536 op, 607065400.00 ns, 9.2631 us/op
WorkloadWarmup   4: 65536 op, 616114600.00 ns, 9.4012 us/op
WorkloadWarmup   5: 65536 op, 632602700.00 ns, 9.6528 us/op
WorkloadWarmup   6: 65536 op, 685453300.00 ns, 10.4592 us/op
WorkloadWarmup   7: 65536 op, 614369000.00 ns, 9.3745 us/op

// BeforeActualRun
WorkloadActual   1: 65536 op, 613962000.00 ns, 9.3683 us/op
WorkloadActual   2: 65536 op, 601051900.00 ns, 9.1713 us/op
WorkloadActual   3: 65536 op, 612015500.00 ns, 9.3386 us/op
WorkloadActual   4: 65536 op, 651433100.00 ns, 9.9401 us/op
WorkloadActual   5: 65536 op, 632078400.00 ns, 9.6448 us/op
WorkloadActual   6: 65536 op, 699491100.00 ns, 10.6734 us/op
WorkloadActual   7: 65536 op, 607033000.00 ns, 9.2626 us/op
WorkloadActual   8: 65536 op, 609111200.00 ns, 9.2943 us/op
WorkloadActual   9: 65536 op, 614532700.00 ns, 9.3770 us/op
WorkloadActual  10: 65536 op, 603760700.00 ns, 9.2127 us/op
WorkloadActual  11: 65536 op, 621209800.00 ns, 9.4789 us/op
WorkloadActual  12: 65536 op, 606821300.00 ns, 9.2594 us/op
WorkloadActual  13: 65536 op, 639910700.00 ns, 9.7643 us/op
WorkloadActual  14: 65536 op, 676756500.00 ns, 10.3265 us/op
WorkloadActual  15: 65536 op, 633821700.00 ns, 9.6714 us/op
WorkloadActual  16: 65536 op, 597326900.00 ns, 9.1145 us/op
WorkloadActual  17: 65536 op, 610845100.00 ns, 9.3208 us/op
WorkloadActual  18: 65536 op, 631723600.00 ns, 9.6393 us/op
WorkloadActual  19: 65536 op, 662499300.00 ns, 10.1089 us/op
WorkloadActual  20: 65536 op, 629954200.00 ns, 9.6123 us/op
WorkloadActual  21: 65536 op, 805275100.00 ns, 12.2875 us/op
WorkloadActual  22: 65536 op, 637732900.00 ns, 9.7310 us/op
WorkloadActual  23: 65536 op, 608159800.00 ns, 9.2798 us/op
WorkloadActual  24: 65536 op, 611319100.00 ns, 9.3280 us/op
WorkloadActual  25: 65536 op, 623365900.00 ns, 9.5118 us/op
WorkloadActual  26: 65536 op, 607532100.00 ns, 9.2702 us/op
WorkloadActual  27: 65536 op, 606767800.00 ns, 9.2585 us/op
WorkloadActual  28: 65536 op, 627595900.00 ns, 9.5764 us/op
WorkloadActual  29: 65536 op, 612531400.00 ns, 9.3465 us/op

// AfterActualRun
WorkloadResult   1: 65536 op, 613700100.00 ns, 9.3643 us/op
WorkloadResult   2: 65536 op, 600790000.00 ns, 9.1673 us/op
WorkloadResult   3: 65536 op, 611753600.00 ns, 9.3346 us/op
WorkloadResult   4: 65536 op, 651171200.00 ns, 9.9361 us/op
WorkloadResult   5: 65536 op, 631816500.00 ns, 9.6408 us/op
WorkloadResult   6: 65536 op, 606771100.00 ns, 9.2586 us/op
WorkloadResult   7: 65536 op, 608849300.00 ns, 9.2903 us/op
WorkloadResult   8: 65536 op, 614270800.00 ns, 9.3730 us/op
WorkloadResult   9: 65536 op, 603498800.00 ns, 9.2087 us/op
WorkloadResult  10: 65536 op, 620947900.00 ns, 9.4749 us/op
WorkloadResult  11: 65536 op, 606559400.00 ns, 9.2554 us/op
WorkloadResult  12: 65536 op, 639648800.00 ns, 9.7603 us/op
WorkloadResult  13: 65536 op, 676494600.00 ns, 10.3225 us/op
WorkloadResult  14: 65536 op, 633559800.00 ns, 9.6674 us/op
WorkloadResult  15: 65536 op, 597065000.00 ns, 9.1105 us/op
WorkloadResult  16: 65536 op, 610583200.00 ns, 9.3168 us/op
WorkloadResult  17: 65536 op, 631461700.00 ns, 9.6353 us/op
WorkloadResult  18: 65536 op, 662237400.00 ns, 10.1049 us/op
WorkloadResult  19: 65536 op, 629692300.00 ns, 9.6083 us/op
WorkloadResult  20: 65536 op, 637471000.00 ns, 9.7270 us/op
WorkloadResult  21: 65536 op, 607897900.00 ns, 9.2758 us/op
WorkloadResult  22: 65536 op, 611057200.00 ns, 9.3240 us/op
WorkloadResult  23: 65536 op, 623104000.00 ns, 9.5078 us/op
WorkloadResult  24: 65536 op, 607270200.00 ns, 9.2662 us/op
WorkloadResult  25: 65536 op, 606505900.00 ns, 9.2545 us/op
WorkloadResult  26: 65536 op, 627334000.00 ns, 9.5724 us/op
WorkloadResult  27: 65536 op, 612269500.00 ns, 9.3425 us/op
GC:  0 0 0 0 0

// AfterAll

Mean = 9.4852 us, StdErr = 0.0567 us (0.60%); N = 27, StdDev = 0.2945 us
Min = 9.1105 us, Q1 = 9.2662 us, Median = 9.3643 us, Q3 = 9.6408 us, Max = 10.3225 us
IQR = 0.3745 us, LowerFence = 8.7044 us, UpperFence = 10.2026 us
ConfidenceInterval = [9.2751 us; 9.6953 us] (CI 99.9%), Margin = 0.2101 us (2.22% of Mean)
Skewness = 1.13, Kurtosis = 3.66, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report.html

// * Detailed results *
PopulateBenchmarks.LinqPopulate: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 745.5552 ns, StdErr = 1.8023 ns (0.24%); N = 13, StdDev = 6.4983 ns
Min = 732.1777 ns, Q1 = 743.6183 ns, Median = 746.0167 ns, Q3 = 750.7474 ns, Max = 754.1735 ns
IQR = 7.1291 ns, LowerFence = 732.9247 ns, UpperFence = 761.4410 ns
ConfidenceInterval = [737.7732 ns; 753.3371 ns] (CI 99.9%), Margin = 7.7819 ns (1.04% of Mean)
Skewness = -0.8, Kurtosis = 2.59, MValue = 2
-------------------- Histogram --------------------
[729.760 ns ; 756.592 ns) | @@@@@@@@@@@@@
---------------------------------------------------

PopulateBenchmarks.ForLoopPopulate: DefaultJob
Runtime = ; GC = 
There are not any results runs

PopulateBenchmarks.ForEachPopulate: DefaultJob
Runtime = ; GC = 
There are not any results runs

PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 17.1761 us, StdErr = 0.0818 us (0.48%); N = 17, StdDev = 0.3372 us
Min = 16.4690 us, Q1 = 17.0255 us, Median = 17.2169 us, Q3 = 17.3365 us, Max = 17.7369 us
IQR = 0.3110 us, LowerFence = 16.5591 us, UpperFence = 17.8029 us
ConfidenceInterval = [16.8477 us; 17.5045 us] (CI 99.9%), Margin = 0.3284 us (1.91% of Mean)
Skewness = -0.47, Kurtosis = 2.79, MValue = 2
-------------------- Histogram --------------------
[16.354 us ; 16.817 us) | @@
[16.817 us ; 17.429 us) | @@@@@@@@@@@@
[17.429 us ; 17.852 us) | @@@
---------------------------------------------------

PopulateBenchmarks.ParallelForEachLoop: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 9.4852 us, StdErr = 0.0567 us (0.60%); N = 27, StdDev = 0.2945 us
Min = 9.1105 us, Q1 = 9.2662 us, Median = 9.3643 us, Q3 = 9.6408 us, Max = 10.3225 us
IQR = 0.3745 us, LowerFence = 8.7044 us, UpperFence = 10.2026 us
ConfidenceInterval = [9.2751 us; 9.6953 us] (CI 99.9%), Margin = 0.2101 us (2.22% of Mean)
Skewness = 1.13, Kurtosis = 3.66, MValue = 2
-------------------- Histogram --------------------
[9.025 us ;  9.384 us) | @@@@@@@@@@@@@@@
[9.384 us ;  9.587 us) | @@@
[9.587 us ;  9.920 us) | @@@@@@
[9.920 us ; 10.408 us) | @@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.18362
AMD Ryzen 5 1600, 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=3.0.100
  [Host]     : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT  [AttachedDebugger]
  DefaultJob : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT


|               Method |        Mean |      Error |     StdDev |
|--------------------- |------------:|-----------:|-----------:|
|         LinqPopulate |    745.6 ns |   7.782 ns |   6.498 ns |
|      ForLoopPopulate |          NA |         NA |         NA |
|      ForEachPopulate |          NA |         NA |         NA |
| ParallelLinqPopulate | 17,176.1 ns | 328.384 ns | 337.227 ns |
|  ParallelForEachLoop |  9,485.2 ns | 210.105 ns | 294.538 ns |

Benchmarks with issues:
  PopulateBenchmarks.ForLoopPopulate: DefaultJob
  PopulateBenchmarks.ForEachPopulate: DefaultJob

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger

// * Hints *
Outliers
  PopulateBenchmarks.LinqPopulate: Default         -> 2 outliers were removed (768.87 ns, 3.06 us)
  PopulateBenchmarks.ParallelLinqPopulate: Default -> 1 outlier  was  removed, 3 outliers were detected (16.47 us, 16.53 us, 17.88 us)
  PopulateBenchmarks.ParallelForEachLoop: Default  -> 2 outliers were removed (10.67 us, 12.29 us)

// * Legends *
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  1 ns   : 1 Nanosecond (0.000000001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:01:40 (100.62 sec), executed benchmarks: 5

Global total time: 00:01:45 (105.83 sec), executed benchmarks: 5
// * Artifacts cleanup *

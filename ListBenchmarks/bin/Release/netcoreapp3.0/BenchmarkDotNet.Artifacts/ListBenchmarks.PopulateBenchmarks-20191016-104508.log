// Validating benchmarks:
Benchmark PopulateBenchmarks.LinqPopulate returns a deferred execution result (IEnumerable<Int32>). You need to either change the method declaration to return a materialized result or consume it on your own. You can use .Consume() extension method to do that.
Benchmark PopulateBenchmarks.ForLoopPopulate returns a deferred execution result (IEnumerable<Int32>). You need to either change the method declaration to return a materialized result or consume it on your own. You can use .Consume() extension method to do that.
Benchmark PopulateBenchmarks.ForEachPopulate returns a deferred execution result (IEnumerable<Int32>). You need to either change the method declaration to return a materialized result or consume it on your own. You can use .Consume() extension method to do that.
Benchmark PopulateBenchmarks.ParallelLinqPopulate returns a deferred execution result (IEnumerable<Int32>). You need to either change the method declaration to return a materialized result or consume it on your own. You can use .Consume() extension method to do that.
Benchmark PopulateBenchmarks.ParallelForEachLoop returns a deferred execution result (IEnumerable<Int32>). You need to either change the method declaration to return a materialized result or consume it on your own. You can use .Consume() extension method to do that.

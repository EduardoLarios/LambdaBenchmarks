// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 5 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed
// command took 1.71s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed
// command took 2.69s and exited with 0
// ***** Done, took 00:00:04 (4.63 sec)   *****
// Found 5 benchmarks:
//   PopulateBenchmarks.LinqPopulate: DefaultJob
//   PopulateBenchmarks.ForLoopPopulate: DefaultJob
//   PopulateBenchmarks.ForEachPopulate: DefaultJob
//   PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
//   PopulateBenchmarks.ParallelForEachLoop: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: PopulateBenchmarks.LinqPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "18297658-b214-4d6b-b989-fbc8d474f3ed.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.LinqPopulate" --job "Default" --benchmarkId 0 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 298600.00 ns, 298.6000 us/op
WorkloadJitting  1: 1 op, 290400.00 ns, 290.4000 us/op

OverheadJitting  2: 16 op, 252200.00 ns, 15.7625 us/op
WorkloadJitting  2: 16 op, 274100.00 ns, 17.1313 us/op

WorkloadPilot    1: 16 op, 16400.00 ns, 1.0250 us/op
WorkloadPilot    2: 32 op, 24600.00 ns, 768.7500 ns/op
WorkloadPilot    3: 64 op, 59700.00 ns, 932.8125 ns/op
WorkloadPilot    4: 128 op, 127200.00 ns, 993.7500 ns/op
WorkloadPilot    5: 256 op, 313400.00 ns, 1.2242 us/op
WorkloadPilot    6: 512 op, 622000.00 ns, 1.2148 us/op
WorkloadPilot    7: 1024 op, 1278900.00 ns, 1.2489 us/op
WorkloadPilot    8: 2048 op, 2587300.00 ns, 1.2633 us/op
WorkloadPilot    9: 4096 op, 5195400.00 ns, 1.2684 us/op
WorkloadPilot   10: 8192 op, 10932800.00 ns, 1.3346 us/op
WorkloadPilot   11: 16384 op, 21467600.00 ns, 1.3103 us/op
WorkloadPilot   12: 32768 op, 42690900.00 ns, 1.3028 us/op
WorkloadPilot   13: 65536 op, 84628100.00 ns, 1.2913 us/op
WorkloadPilot   14: 131072 op, 163741700.00 ns, 1.2493 us/op
WorkloadPilot   15: 262144 op, 265926600.00 ns, 1.0144 us/op
WorkloadPilot   16: 524288 op, 545514400.00 ns, 1.0405 us/op

OverheadWarmup   1: 524288 op, 1093900.00 ns, 2.0864 ns/op
OverheadWarmup   2: 524288 op, 1095200.00 ns, 2.0889 ns/op
OverheadWarmup   3: 524288 op, 1089300.00 ns, 2.0777 ns/op
OverheadWarmup   4: 524288 op, 1108900.00 ns, 2.1151 ns/op
OverheadWarmup   5: 524288 op, 1099800.00 ns, 2.0977 ns/op

OverheadActual   1: 524288 op, 1090700.00 ns, 2.0803 ns/op
OverheadActual   2: 524288 op, 1089300.00 ns, 2.0777 ns/op
OverheadActual   3: 524288 op, 1098500.00 ns, 2.0952 ns/op
OverheadActual   4: 524288 op, 1092500.00 ns, 2.0838 ns/op
OverheadActual   5: 524288 op, 1104800.00 ns, 2.1072 ns/op
OverheadActual   6: 524288 op, 1090400.00 ns, 2.0798 ns/op
OverheadActual   7: 524288 op, 1095200.00 ns, 2.0889 ns/op
OverheadActual   8: 524288 op, 1092100.00 ns, 2.0830 ns/op
OverheadActual   9: 524288 op, 1086700.00 ns, 2.0727 ns/op
OverheadActual  10: 524288 op, 1094000.00 ns, 2.0866 ns/op
OverheadActual  11: 524288 op, 1086100.00 ns, 2.0716 ns/op
OverheadActual  12: 524288 op, 1086500.00 ns, 2.0723 ns/op
OverheadActual  13: 524288 op, 1097900.00 ns, 2.0941 ns/op
OverheadActual  14: 524288 op, 1102000.00 ns, 2.1019 ns/op
OverheadActual  15: 524288 op, 1093600.00 ns, 2.0859 ns/op

WorkloadWarmup   1: 524288 op, 386058600.00 ns, 736.3483 ns/op
WorkloadWarmup   2: 524288 op, 661851000.00 ns, 1.2624 us/op
WorkloadWarmup   3: 524288 op, 388099300.00 ns, 740.2407 ns/op
WorkloadWarmup   4: 524288 op, 376960200.00 ns, 718.9945 ns/op
WorkloadWarmup   5: 524288 op, 371433800.00 ns, 708.4538 ns/op
WorkloadWarmup   6: 524288 op, 977519500.00 ns, 1.8645 us/op
WorkloadWarmup   7: 524288 op, 386628700.00 ns, 737.4357 ns/op

// BeforeActualRun
WorkloadActual   1: 524288 op, 386665200.00 ns, 737.5053 ns/op
WorkloadActual   2: 524288 op, 383511800.00 ns, 731.4907 ns/op
WorkloadActual   3: 524288 op, 371111900.00 ns, 707.8398 ns/op
WorkloadActual   4: 524288 op, 376790700.00 ns, 718.6712 ns/op
WorkloadActual   5: 524288 op, 370594300.00 ns, 706.8525 ns/op
WorkloadActual   6: 524288 op, 370402000.00 ns, 706.4857 ns/op
WorkloadActual   7: 524288 op, 1661255600.00 ns, 3.1686 us/op
WorkloadActual   8: 524288 op, 373672400.00 ns, 712.7235 ns/op
WorkloadActual   9: 524288 op, 367888100.00 ns, 701.6909 ns/op
WorkloadActual  10: 524288 op, 370301900.00 ns, 706.2948 ns/op
WorkloadActual  11: 524288 op, 368210700.00 ns, 702.3062 ns/op
WorkloadActual  12: 524288 op, 367125200.00 ns, 700.2357 ns/op
WorkloadActual  13: 524288 op, 371119400.00 ns, 707.8541 ns/op
WorkloadActual  14: 524288 op, 365355600.00 ns, 696.8605 ns/op
WorkloadActual  15: 524288 op, 365000400.00 ns, 696.1830 ns/op

// AfterActualRun
WorkloadResult   1: 524288 op, 385572700.00 ns, 735.4216 ns/op
WorkloadResult   2: 524288 op, 382419300.00 ns, 729.4069 ns/op
WorkloadResult   3: 524288 op, 370019400.00 ns, 705.7560 ns/op
WorkloadResult   4: 524288 op, 375698200.00 ns, 716.5874 ns/op
WorkloadResult   5: 524288 op, 369501800.00 ns, 704.7688 ns/op
WorkloadResult   6: 524288 op, 369309500.00 ns, 704.4020 ns/op
WorkloadResult   7: 524288 op, 372579900.00 ns, 710.6398 ns/op
WorkloadResult   8: 524288 op, 366795600.00 ns, 699.6071 ns/op
WorkloadResult   9: 524288 op, 369209400.00 ns, 704.2110 ns/op
WorkloadResult  10: 524288 op, 367118200.00 ns, 700.2224 ns/op
WorkloadResult  11: 524288 op, 366032700.00 ns, 698.1520 ns/op
WorkloadResult  12: 524288 op, 370026900.00 ns, 705.7703 ns/op
WorkloadResult  13: 524288 op, 364263100.00 ns, 694.7767 ns/op
WorkloadResult  14: 524288 op, 363907900.00 ns, 694.0992 ns/op
GC:  0 0 0 0 0

// AfterAll

Mean = 707.4158 ns, StdErr = 3.2563 ns (0.46%); N = 14, StdDev = 12.1841 ns
Min = 694.0992 ns, Q1 = 699.6071 ns, Median = 704.5854 ns, Q3 = 710.6398 ns, Max = 735.4216 ns
IQR = 11.0327 ns, LowerFence = 683.0581 ns, UpperFence = 727.1888 ns
ConfidenceInterval = [693.6713 ns; 721.1603 ns] (CI 99.9%), Margin = 13.7445 ns (1.94% of Mean)
Skewness = 1.08, Kurtosis = 3.01, MValue = 2

// **************************
// Benchmark: PopulateBenchmarks.ForLoopPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "18297658-b214-4d6b-b989-fbc8d474f3ed.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ForLoopPopulate" --job "Default" --benchmarkId 1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 313200.00 ns, 313.2000 us/op
WorkloadJitting  1: 1 op, 460900.00 ns, 460.9000 us/op

OverheadJitting  2: 16 op, 243600.00 ns, 15.2250 us/op
WorkloadJitting  2: 16 op, 373600.00 ns, 23.3500 us/op

WorkloadPilot    1: 16 op, 10700.00 ns, 668.7500 ns/op
WorkloadPilot    2: 32 op, 17100.00 ns, 534.3750 ns/op
WorkloadPilot    3: 64 op, 43000.00 ns, 671.8750 ns/op
WorkloadPilot    4: 128 op, 91500.00 ns, 714.8438 ns/op
WorkloadPilot    5: 256 op, 187100.00 ns, 730.8594 ns/op
WorkloadPilot    6: 512 op, 379900.00 ns, 741.9922 ns/op
WorkloadPilot    7: 1024 op, 798200.00 ns, 779.4922 ns/op
WorkloadPilot    8: 2048 op, 1494600.00 ns, 729.7852 ns/op
WorkloadPilot    9: 4096 op, 3057400.00 ns, 746.4355 ns/op
WorkloadPilot   10: 8192 op, 6795500.00 ns, 829.5288 ns/op
WorkloadPilot   11: 16384 op, 12451400.00 ns, 759.9731 ns/op
WorkloadPilot   12: 32768 op, 24746800.00 ns, 755.2124 ns/op
WorkloadPilot   13: 65536 op, 46877900.00 ns, 715.3000 ns/op
WorkloadPilot   14: 131072 op, 91344000.00 ns, 696.8994 ns/op
WorkloadPilot   15: 262144 op, 214343100.00 ns, 817.6540 ns/op
WorkloadPilot   16: 524288 op, 365382000.00 ns, 696.9109 ns/op
WorkloadPilot   17: 1048576 op, 885096400.00 ns, 844.0937 ns/op

OverheadWarmup   1: 1048576 op, 2174200.00 ns, 2.0735 ns/op
OverheadWarmup   2: 1048576 op, 2179900.00 ns, 2.0789 ns/op
OverheadWarmup   3: 1048576 op, 2197400.00 ns, 2.0956 ns/op
OverheadWarmup   4: 1048576 op, 2192000.00 ns, 2.0905 ns/op
OverheadWarmup   5: 1048576 op, 2184200.00 ns, 2.0830 ns/op
OverheadWarmup   6: 1048576 op, 2193800.00 ns, 2.0922 ns/op
OverheadWarmup   7: 1048576 op, 2176100.00 ns, 2.0753 ns/op

OverheadActual   1: 1048576 op, 2192100.00 ns, 2.0905 ns/op
OverheadActual   2: 1048576 op, 2184300.00 ns, 2.0831 ns/op
OverheadActual   3: 1048576 op, 2198100.00 ns, 2.0963 ns/op
OverheadActual   4: 1048576 op, 2189200.00 ns, 2.0878 ns/op
OverheadActual   5: 1048576 op, 2183300.00 ns, 2.0822 ns/op
OverheadActual   6: 1048576 op, 2176600.00 ns, 2.0758 ns/op
OverheadActual   7: 1048576 op, 2167800.00 ns, 2.0674 ns/op
OverheadActual   8: 1048576 op, 2193400.00 ns, 2.0918 ns/op
OverheadActual   9: 1048576 op, 2184900.00 ns, 2.0837 ns/op
OverheadActual  10: 1048576 op, 2202600.00 ns, 2.1006 ns/op
OverheadActual  11: 1048576 op, 2171100.00 ns, 2.0705 ns/op
OverheadActual  12: 1048576 op, 2184300.00 ns, 2.0831 ns/op
OverheadActual  13: 1048576 op, 2180100.00 ns, 2.0791 ns/op
OverheadActual  14: 1048576 op, 2190900.00 ns, 2.0894 ns/op
OverheadActual  15: 1048576 op, 2187800.00 ns, 2.0864 ns/op

WorkloadWarmup   1: 1048576 op, 461631200.00 ns, 440.2458 ns/op
WorkloadWarmup   2: 1048576 op, 1047117400.00 ns, 998.6090 ns/op
WorkloadWarmup   3: 1048576 op, 557424000.00 ns, 531.6010 ns/op
WorkloadWarmup   4: 1048576 op, 509610500.00 ns, 486.0024 ns/op
WorkloadWarmup   5: 1048576 op, 460646000.00 ns, 439.3063 ns/op
WorkloadWarmup   6: 1048576 op, 1809132100.00 ns, 1.7253 us/op
WorkloadWarmup   7: 1048576 op, 531842700.00 ns, 507.2047 ns/op

// BeforeActualRun
WorkloadActual   1: 1048576 op, 548409400.00 ns, 523.0040 ns/op
WorkloadActual   2: 1048576 op, 527367900.00 ns, 502.9372 ns/op
WorkloadActual   3: 1048576 op, 606048600.00 ns, 577.9730 ns/op
WorkloadActual   4: 1048576 op, 575430500.00 ns, 548.7733 ns/op
WorkloadActual   5: 1048576 op, 554883400.00 ns, 529.1780 ns/op
WorkloadActual   6: 1048576 op, 610560100.00 ns, 582.2755 ns/op
WorkloadActual   7: 1048576 op, 6042953200.00 ns, 5.7630 us/op
WorkloadActual   8: 1048576 op, 584838000.00 ns, 557.7450 ns/op
WorkloadActual   9: 1048576 op, 618244600.00 ns, 589.6040 ns/op
WorkloadActual  10: 1048576 op, 626167800.00 ns, 597.1601 ns/op
WorkloadActual  11: 1048576 op, 518807300.00 ns, 494.7732 ns/op

OutOfMemoryException!
BenchmarkDotNet continues to run additional iterations until desired accuracy level is achieved. It's possible only if the benchmark method doesn't have any side-effects.
If your benchmark allocates memory and keeps it alive, you are creating a memory leak.
You should redesign your benchmark and remove the side-effects. You can use `OperationsPerInvoke`, `IterationSetup` and `IterationCleanup` to do that.

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.OutOfMemoryException: Array dimensions exceeded supported range.
   at System.Collections.Generic.List`1.set_Capacity(Int32 value)
   at System.Collections.Generic.List`1.EnsureCapacity(Int32 min)
   at System.Collections.Generic.List`1.AddWithResize(T item)
   at ListBenchmarks.PopulateBenchmarks.ForLoopPopulate() in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\Program.cs:line 95
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionUnroll(Int64 invokeCount) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed\18297658-b214-4d6b-b989-fbc8d474f3ed.notcs:line 1386
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.RunAuto(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.Run(Int64 invokeCount, IterationMode iterationMode, Boolean runAuto, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.EngineActualStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed\18297658-b214-4d6b-b989-fbc8d474f3ed.notcs:line 815
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed\18297658-b214-4d6b-b989-fbc8d474f3ed.notcs:line 52
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: PopulateBenchmarks.ForEachPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "18297658-b214-4d6b-b989-fbc8d474f3ed.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ForEachPopulate" --job "Default" --benchmarkId 2 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 317800.00 ns, 317.8000 us/op
WorkloadJitting  1: 1 op, 907100.00 ns, 907.1000 us/op

OverheadJitting  2: 16 op, 246300.00 ns, 15.3938 us/op
WorkloadJitting  2: 16 op, 240000.00 ns, 15.0000 us/op

WorkloadPilot    1: 16 op, 11000.00 ns, 687.5000 ns/op
WorkloadPilot    2: 32 op, 15100.00 ns, 471.8750 ns/op
WorkloadPilot    3: 64 op, 47200.00 ns, 737.5000 ns/op
WorkloadPilot    4: 128 op, 99400.00 ns, 776.5625 ns/op
WorkloadPilot    5: 256 op, 200400.00 ns, 782.8125 ns/op
WorkloadPilot    6: 512 op, 391700.00 ns, 765.0391 ns/op
WorkloadPilot    7: 1024 op, 872900.00 ns, 852.4414 ns/op
WorkloadPilot    8: 2048 op, 1668100.00 ns, 814.5020 ns/op
WorkloadPilot    9: 4096 op, 3579500.00 ns, 873.9014 ns/op
WorkloadPilot   10: 8192 op, 6895500.00 ns, 841.7358 ns/op
WorkloadPilot   11: 16384 op, 13621100.00 ns, 831.3660 ns/op
WorkloadPilot   12: 32768 op, 26961600.00 ns, 822.8027 ns/op
WorkloadPilot   13: 65536 op, 53917700.00 ns, 822.7188 ns/op
WorkloadPilot   14: 131072 op, 104398400.00 ns, 796.4966 ns/op
WorkloadPilot   15: 262144 op, 211201900.00 ns, 805.6713 ns/op
WorkloadPilot   16: 524288 op, 435744300.00 ns, 831.1163 ns/op
WorkloadPilot   17: 1048576 op, 889887400.00 ns, 848.6628 ns/op

OverheadWarmup   1: 1048576 op, 2180000.00 ns, 2.0790 ns/op
OverheadWarmup   2: 1048576 op, 2170000.00 ns, 2.0695 ns/op
OverheadWarmup   3: 1048576 op, 2171700.00 ns, 2.0711 ns/op
OverheadWarmup   4: 1048576 op, 2194000.00 ns, 2.0924 ns/op
OverheadWarmup   5: 1048576 op, 2169200.00 ns, 2.0687 ns/op
OverheadWarmup   6: 1048576 op, 2194700.00 ns, 2.0930 ns/op
OverheadWarmup   7: 1048576 op, 2172900.00 ns, 2.0722 ns/op

OverheadActual   1: 1048576 op, 2169100.00 ns, 2.0686 ns/op
OverheadActual   2: 1048576 op, 2172200.00 ns, 2.0716 ns/op
OverheadActual   3: 1048576 op, 2170700.00 ns, 2.0701 ns/op
OverheadActual   4: 1048576 op, 2171100.00 ns, 2.0705 ns/op
OverheadActual   5: 1048576 op, 2184300.00 ns, 2.0831 ns/op
OverheadActual   6: 1048576 op, 2173200.00 ns, 2.0725 ns/op
OverheadActual   7: 1048576 op, 2176000.00 ns, 2.0752 ns/op
OverheadActual   8: 1048576 op, 2176700.00 ns, 2.0759 ns/op
OverheadActual   9: 1048576 op, 2168400.00 ns, 2.0679 ns/op
OverheadActual  10: 1048576 op, 2172000.00 ns, 2.0714 ns/op
OverheadActual  11: 1048576 op, 2186900.00 ns, 2.0856 ns/op
OverheadActual  12: 1048576 op, 2207400.00 ns, 2.1051 ns/op
OverheadActual  13: 1048576 op, 2168200.00 ns, 2.0678 ns/op
OverheadActual  14: 1048576 op, 2212500.00 ns, 2.1100 ns/op
OverheadActual  15: 1048576 op, 2167300.00 ns, 2.0669 ns/op

WorkloadWarmup   1: 1048576 op, 583445000.00 ns, 556.4165 ns/op
WorkloadWarmup   2: 1048576 op, 1133023400.00 ns, 1.0805 us/op
WorkloadWarmup   3: 1048576 op, 562320300.00 ns, 536.2704 ns/op
WorkloadWarmup   4: 1048576 op, 553912400.00 ns, 528.2520 ns/op
WorkloadWarmup   5: 1048576 op, 555055800.00 ns, 529.3425 ns/op
WorkloadWarmup   6: 1048576 op, 1713036600.00 ns, 1.6337 us/op
WorkloadWarmup   7: 1048576 op, 557764500.00 ns, 531.9257 ns/op

// BeforeActualRun
WorkloadActual   1: 1048576 op, 569853000.00 ns, 543.4542 ns/op
WorkloadActual   2: 1048576 op, 563467600.00 ns, 537.3646 ns/op
WorkloadActual   3: 1048576 op, 564002500.00 ns, 537.8747 ns/op
WorkloadActual   4: 1048576 op, 554489300.00 ns, 528.8022 ns/op
WorkloadActual   5: 1048576 op, 557196700.00 ns, 531.3842 ns/op
WorkloadActual   6: 1048576 op, 574494900.00 ns, 547.8810 ns/op
WorkloadActual   7: 1048576 op, 4079236000.00 ns, 3.8903 us/op
WorkloadActual   8: 1048576 op, 835719900.00 ns, 797.0046 ns/op
WorkloadActual   9: 1048576 op, 808324700.00 ns, 770.8785 ns/op
WorkloadActual  10: 1048576 op, 797022000.00 ns, 760.0994 ns/op
WorkloadActual  11: 1048576 op, 825068500.00 ns, 786.8466 ns/op

OutOfMemoryException!
BenchmarkDotNet continues to run additional iterations until desired accuracy level is achieved. It's possible only if the benchmark method doesn't have any side-effects.
If your benchmark allocates memory and keeps it alive, you are creating a memory leak.
You should redesign your benchmark and remove the side-effects. You can use `OperationsPerInvoke`, `IterationSetup` and `IterationCleanup` to do that.

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.OutOfMemoryException: Array dimensions exceeded supported range.
   at System.Collections.Generic.List`1.set_Capacity(Int32 value)
   at System.Collections.Generic.List`1.EnsureCapacity(Int32 min)
   at System.Collections.Generic.List`1.AddWithResize(T item)
   at ListBenchmarks.PopulateBenchmarks.ForEachPopulate() in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\Program.cs:line 106
   at BenchmarkDotNet.Autogenerated.Runnable_2.WorkloadActionUnroll(Int64 invokeCount) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed\18297658-b214-4d6b-b989-fbc8d474f3ed.notcs:line 2030
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.RunAuto(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.Run(Int64 invokeCount, IterationMode iterationMode, Boolean runAuto, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.EngineActualStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_2.Run(IHost host, String benchmarkName) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed\18297658-b214-4d6b-b989-fbc8d474f3ed.notcs:line 1459
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed\18297658-b214-4d6b-b989-fbc8d474f3ed.notcs:line 52
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "18297658-b214-4d6b-b989-fbc8d474f3ed.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ParallelLinqPopulate" --job "Default" --benchmarkId 3 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 306100.00 ns, 306.1000 us/op
WorkloadJitting  1: 1 op, 20820800.00 ns, 20.8208 ms/op

OverheadJitting  2: 16 op, 272500.00 ns, 17.0312 us/op
WorkloadJitting  2: 16 op, 899200.00 ns, 56.2000 us/op

WorkloadPilot    1: 16 op, 411400.00 ns, 25.7125 us/op
WorkloadPilot    2: 32 op, 719600.00 ns, 22.4875 us/op
WorkloadPilot    3: 64 op, 1346000.00 ns, 21.0312 us/op
WorkloadPilot    4: 128 op, 2766000.00 ns, 21.6094 us/op
WorkloadPilot    5: 256 op, 5586200.00 ns, 21.8211 us/op
WorkloadPilot    6: 512 op, 10736000.00 ns, 20.9688 us/op
WorkloadPilot    7: 1024 op, 22416600.00 ns, 21.8912 us/op
WorkloadPilot    8: 2048 op, 42582200.00 ns, 20.7921 us/op
WorkloadPilot    9: 4096 op, 82408200.00 ns, 20.1192 us/op
WorkloadPilot   10: 8192 op, 164404100.00 ns, 20.0689 us/op
WorkloadPilot   11: 16384 op, 316404400.00 ns, 19.3118 us/op
WorkloadPilot   12: 32768 op, 628569600.00 ns, 19.1824 us/op

OverheadWarmup   1: 32768 op, 71200.00 ns, 2.1729 ns/op
OverheadWarmup   2: 32768 op, 68000.00 ns, 2.0752 ns/op
OverheadWarmup   3: 32768 op, 87000.00 ns, 2.6550 ns/op
OverheadWarmup   4: 32768 op, 67900.00 ns, 2.0721 ns/op
OverheadWarmup   5: 32768 op, 70700.00 ns, 2.1576 ns/op
OverheadWarmup   6: 32768 op, 68000.00 ns, 2.0752 ns/op

OverheadActual   1: 32768 op, 68000.00 ns, 2.0752 ns/op
OverheadActual   2: 32768 op, 68000.00 ns, 2.0752 ns/op
OverheadActual   3: 32768 op, 73400.00 ns, 2.2400 ns/op
OverheadActual   4: 32768 op, 67900.00 ns, 2.0721 ns/op
OverheadActual   5: 32768 op, 79700.00 ns, 2.4323 ns/op
OverheadActual   6: 32768 op, 70700.00 ns, 2.1576 ns/op
OverheadActual   7: 32768 op, 68000.00 ns, 2.0752 ns/op
OverheadActual   8: 32768 op, 68000.00 ns, 2.0752 ns/op
OverheadActual   9: 32768 op, 67900.00 ns, 2.0721 ns/op
OverheadActual  10: 32768 op, 68000.00 ns, 2.0752 ns/op
OverheadActual  11: 32768 op, 68000.00 ns, 2.0752 ns/op
OverheadActual  12: 32768 op, 68000.00 ns, 2.0752 ns/op
OverheadActual  13: 32768 op, 68000.00 ns, 2.0752 ns/op
OverheadActual  14: 32768 op, 68000.00 ns, 2.0752 ns/op
OverheadActual  15: 32768 op, 68000.00 ns, 2.0752 ns/op

WorkloadWarmup   1: 32768 op, 636326100.00 ns, 19.4191 us/op
WorkloadWarmup   2: 32768 op, 573981900.00 ns, 17.5165 us/op
WorkloadWarmup   3: 32768 op, 672364500.00 ns, 20.5189 us/op
WorkloadWarmup   4: 32768 op, 556960800.00 ns, 16.9971 us/op
WorkloadWarmup   5: 32768 op, 561240300.00 ns, 17.1277 us/op
WorkloadWarmup   6: 32768 op, 558294000.00 ns, 17.0378 us/op

// BeforeActualRun
WorkloadActual   1: 32768 op, 568134900.00 ns, 17.3381 us/op
WorkloadActual   2: 32768 op, 834205500.00 ns, 25.4579 us/op
WorkloadActual   3: 32768 op, 570881800.00 ns, 17.4219 us/op
WorkloadActual   4: 32768 op, 560710000.00 ns, 17.1115 us/op
WorkloadActual   5: 32768 op, 565326800.00 ns, 17.2524 us/op
WorkloadActual   6: 32768 op, 570294500.00 ns, 17.4040 us/op
WorkloadActual   7: 32768 op, 563675300.00 ns, 17.2020 us/op
WorkloadActual   8: 32768 op, 570755700.00 ns, 17.4181 us/op
WorkloadActual   9: 32768 op, 563687000.00 ns, 17.2024 us/op
WorkloadActual  10: 32768 op, 570359800.00 ns, 17.4060 us/op
WorkloadActual  11: 32768 op, 569440300.00 ns, 17.3779 us/op
WorkloadActual  12: 32768 op, 768756900.00 ns, 23.4606 us/op
WorkloadActual  13: 32768 op, 564964000.00 ns, 17.2413 us/op
WorkloadActual  14: 32768 op, 572924000.00 ns, 17.4843 us/op
WorkloadActual  15: 32768 op, 559286800.00 ns, 17.0681 us/op

// AfterActualRun
WorkloadResult   1: 32768 op, 568066900.00 ns, 17.3360 us/op
WorkloadResult   2: 32768 op, 570813800.00 ns, 17.4199 us/op
WorkloadResult   3: 32768 op, 560642000.00 ns, 17.1094 us/op
WorkloadResult   4: 32768 op, 565258800.00 ns, 17.2503 us/op
WorkloadResult   5: 32768 op, 570226500.00 ns, 17.4019 us/op
WorkloadResult   6: 32768 op, 563607300.00 ns, 17.1999 us/op
WorkloadResult   7: 32768 op, 570687700.00 ns, 17.4160 us/op
WorkloadResult   8: 32768 op, 563619000.00 ns, 17.2003 us/op
WorkloadResult   9: 32768 op, 570291800.00 ns, 17.4039 us/op
WorkloadResult  10: 32768 op, 569372300.00 ns, 17.3759 us/op
WorkloadResult  11: 32768 op, 564896000.00 ns, 17.2393 us/op
WorkloadResult  12: 32768 op, 572856000.00 ns, 17.4822 us/op
WorkloadResult  13: 32768 op, 559218800.00 ns, 17.0660 us/op
GC:  0 0 0 0 0

// AfterAll

Mean = 17.3001 us, StdErr = 0.0364 us (0.21%); N = 13, StdDev = 0.1312 us
Min = 17.0660 us, Q1 = 17.2001 us, Median = 17.3360 us, Q3 = 17.4100 us, Max = 17.4822 us
IQR = 0.2099 us, LowerFence = 16.8853 us, UpperFence = 17.7248 us
ConfidenceInterval = [17.1430 us; 17.4571 us] (CI 99.9%), Margin = 0.1571 us (0.91% of Mean)
Skewness = -0.35, Kurtosis = 1.63, MValue = 2

// **************************
// Benchmark: PopulateBenchmarks.ParallelForEachLoop: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "18297658-b214-4d6b-b989-fbc8d474f3ed.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ParallelForEachLoop" --job "Default" --benchmarkId 4 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\18297658-b214-4d6b-b989-fbc8d474f3ed\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 296800.00 ns, 296.8000 us/op
WorkloadJitting  1: 1 op, 10408200.00 ns, 10.4082 ms/op

OverheadJitting  2: 16 op, 251300.00 ns, 15.7062 us/op
WorkloadJitting  2: 16 op, 863500.00 ns, 53.9688 us/op

WorkloadPilot    1: 16 op, 354800.00 ns, 22.1750 us/op
WorkloadPilot    2: 32 op, 277000.00 ns, 8.6562 us/op
WorkloadPilot    3: 64 op, 589600.00 ns, 9.2125 us/op
WorkloadPilot    4: 128 op, 1560700.00 ns, 12.1930 us/op
WorkloadPilot    5: 256 op, 2346500.00 ns, 9.1660 us/op
WorkloadPilot    6: 512 op, 5710400.00 ns, 11.1531 us/op
WorkloadPilot    7: 1024 op, 9298300.00 ns, 9.0804 us/op
WorkloadPilot    8: 2048 op, 19211300.00 ns, 9.3805 us/op
WorkloadPilot    9: 4096 op, 39696000.00 ns, 9.6914 us/op
WorkloadPilot   10: 8192 op, 76662800.00 ns, 9.3583 us/op
WorkloadPilot   11: 16384 op, 148141000.00 ns, 9.0418 us/op
WorkloadPilot   12: 32768 op, 258413300.00 ns, 7.8861 us/op
WorkloadPilot   13: 65536 op, 465408000.00 ns, 7.1016 us/op
WorkloadPilot   14: 131072 op, 943986100.00 ns, 7.2020 us/op

OverheadWarmup   1: 131072 op, 275200.00 ns, 2.0996 ns/op
OverheadWarmup   2: 131072 op, 270800.00 ns, 2.0660 ns/op
OverheadWarmup   3: 131072 op, 271000.00 ns, 2.0676 ns/op
OverheadWarmup   4: 131072 op, 272900.00 ns, 2.0821 ns/op
OverheadWarmup   5: 131072 op, 273200.00 ns, 2.0844 ns/op
OverheadWarmup   6: 131072 op, 277200.00 ns, 2.1149 ns/op
OverheadWarmup   7: 131072 op, 272100.00 ns, 2.0760 ns/op
OverheadWarmup   8: 131072 op, 270800.00 ns, 2.0660 ns/op
OverheadWarmup   9: 131072 op, 272600.00 ns, 2.0798 ns/op
OverheadWarmup  10: 131072 op, 274200.00 ns, 2.0920 ns/op

OverheadActual   1: 131072 op, 273800.00 ns, 2.0889 ns/op
OverheadActual   2: 131072 op, 273000.00 ns, 2.0828 ns/op
OverheadActual   3: 131072 op, 270800.00 ns, 2.0660 ns/op
OverheadActual   4: 131072 op, 270800.00 ns, 2.0660 ns/op
OverheadActual   5: 131072 op, 274200.00 ns, 2.0920 ns/op
OverheadActual   6: 131072 op, 270700.00 ns, 2.0653 ns/op
OverheadActual   7: 131072 op, 272900.00 ns, 2.0821 ns/op
OverheadActual   8: 131072 op, 270900.00 ns, 2.0668 ns/op
OverheadActual   9: 131072 op, 296500.00 ns, 2.2621 ns/op
OverheadActual  10: 131072 op, 274900.00 ns, 2.0973 ns/op
OverheadActual  11: 131072 op, 272600.00 ns, 2.0798 ns/op
OverheadActual  12: 131072 op, 273800.00 ns, 2.0889 ns/op
OverheadActual  13: 131072 op, 273000.00 ns, 2.0828 ns/op
OverheadActual  14: 131072 op, 270800.00 ns, 2.0660 ns/op
OverheadActual  15: 131072 op, 272200.00 ns, 2.0767 ns/op

WorkloadWarmup   1: 131072 op, 1127391200.00 ns, 8.6013 us/op
WorkloadWarmup   2: 131072 op, 793622000.00 ns, 6.0549 us/op
WorkloadWarmup   3: 131072 op, 892893400.00 ns, 6.8122 us/op
WorkloadWarmup   4: 131072 op, 781636500.00 ns, 5.9634 us/op
WorkloadWarmup   5: 131072 op, 767339300.00 ns, 5.8543 us/op
WorkloadWarmup   6: 131072 op, 777492200.00 ns, 5.9318 us/op
WorkloadWarmup   7: 131072 op, 1005204600.00 ns, 7.6691 us/op
WorkloadWarmup   8: 131072 op, 773873200.00 ns, 5.9042 us/op

// BeforeActualRun
WorkloadActual   1: 131072 op, 784192400.00 ns, 5.9829 us/op
WorkloadActual   2: 131072 op, 777782400.00 ns, 5.9340 us/op
WorkloadActual   3: 131072 op, 790706000.00 ns, 6.0326 us/op
WorkloadActual   4: 131072 op, 784009600.00 ns, 5.9815 us/op
WorkloadActual   5: 131072 op, 780403000.00 ns, 5.9540 us/op
WorkloadActual   6: 131072 op, 776524000.00 ns, 5.9244 us/op
WorkloadActual   7: 131072 op, 3513314100.00 ns, 26.8045 us/op
WorkloadActual   8: 131072 op, 811714400.00 ns, 6.1929 us/op
WorkloadActual   9: 131072 op, 794243400.00 ns, 6.0596 us/op
WorkloadActual  10: 131072 op, 801687100.00 ns, 6.1164 us/op
WorkloadActual  11: 131072 op, 810516600.00 ns, 6.1838 us/op
WorkloadActual  12: 131072 op, 800355000.00 ns, 6.1062 us/op
WorkloadActual  13: 131072 op, 812198300.00 ns, 6.1966 us/op
WorkloadActual  14: 131072 op, 794385600.00 ns, 6.0607 us/op
WorkloadActual  15: 131072 op, 795454200.00 ns, 6.0688 us/op

// AfterActualRun
WorkloadResult   1: 131072 op, 783919500.00 ns, 5.9808 us/op
WorkloadResult   2: 131072 op, 777509500.00 ns, 5.9319 us/op
WorkloadResult   3: 131072 op, 790433100.00 ns, 6.0305 us/op
WorkloadResult   4: 131072 op, 783736700.00 ns, 5.9794 us/op
WorkloadResult   5: 131072 op, 780130100.00 ns, 5.9519 us/op
WorkloadResult   6: 131072 op, 776251100.00 ns, 5.9223 us/op
WorkloadResult   7: 131072 op, 811441500.00 ns, 6.1908 us/op
WorkloadResult   8: 131072 op, 793970500.00 ns, 6.0575 us/op
WorkloadResult   9: 131072 op, 801414200.00 ns, 6.1143 us/op
WorkloadResult  10: 131072 op, 810243700.00 ns, 6.1817 us/op
WorkloadResult  11: 131072 op, 800082100.00 ns, 6.1041 us/op
WorkloadResult  12: 131072 op, 811925400.00 ns, 6.1945 us/op
WorkloadResult  13: 131072 op, 794112700.00 ns, 6.0586 us/op
WorkloadResult  14: 131072 op, 795181300.00 ns, 6.0668 us/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.0547 us, StdErr = 0.0252 us (0.42%); N = 14, StdDev = 0.0941 us
Min = 5.9223 us, Q1 = 5.9794 us, Median = 6.0581 us, Q3 = 6.1143 us, Max = 6.1945 us
IQR = 0.1349 us, LowerFence = 5.7771 us, UpperFence = 6.3166 us
ConfidenceInterval = [5.9485 us; 6.1609 us] (CI 99.9%), Margin = 0.1062 us (1.75% of Mean)
Skewness = 0.13, Kurtosis = 1.56, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report.html

// * Detailed results *
PopulateBenchmarks.LinqPopulate: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 707.4158 ns, StdErr = 3.2563 ns (0.46%); N = 14, StdDev = 12.1841 ns
Min = 694.0992 ns, Q1 = 699.6071 ns, Median = 704.5854 ns, Q3 = 710.6398 ns, Max = 735.4216 ns
IQR = 11.0327 ns, LowerFence = 683.0581 ns, UpperFence = 727.1888 ns
ConfidenceInterval = [693.6713 ns; 721.1603 ns] (CI 99.9%), Margin = 13.7445 ns (1.94% of Mean)
Skewness = 1.08, Kurtosis = 3.01, MValue = 2
-------------------- Histogram --------------------
[689.676 ns ; 708.981 ns) | @@@@@@@@@@
[708.981 ns ; 725.090 ns) | @@
[725.090 ns ; 739.845 ns) | @@
---------------------------------------------------

PopulateBenchmarks.ForLoopPopulate: DefaultJob
Runtime = ; GC = 
There are not any results runs

PopulateBenchmarks.ForEachPopulate: DefaultJob
Runtime = ; GC = 
There are not any results runs

PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 17.3001 us, StdErr = 0.0364 us (0.21%); N = 13, StdDev = 0.1312 us
Min = 17.0660 us, Q1 = 17.2001 us, Median = 17.3360 us, Q3 = 17.4100 us, Max = 17.4822 us
IQR = 0.2099 us, LowerFence = 16.8853 us, UpperFence = 17.7248 us
ConfidenceInterval = [17.1430 us; 17.4571 us] (CI 99.9%), Margin = 0.1571 us (0.91% of Mean)
Skewness = -0.35, Kurtosis = 1.63, MValue = 2
-------------------- Histogram --------------------
[17.017 us ; 17.531 us) | @@@@@@@@@@@@@
---------------------------------------------------

PopulateBenchmarks.ParallelForEachLoop: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 6.0547 us, StdErr = 0.0252 us (0.42%); N = 14, StdDev = 0.0941 us
Min = 5.9223 us, Q1 = 5.9794 us, Median = 6.0581 us, Q3 = 6.1143 us, Max = 6.1945 us
IQR = 0.1349 us, LowerFence = 5.7771 us, UpperFence = 6.3166 us
ConfidenceInterval = [5.9485 us; 6.1609 us] (CI 99.9%), Margin = 0.1062 us (1.75% of Mean)
Skewness = 0.13, Kurtosis = 1.56, MValue = 2
-------------------- Histogram --------------------
[5.888 us ; 6.011 us) | @@@@@
[6.011 us ; 6.229 us) | @@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.18362
AMD Ryzen 5 1600, 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=3.0.100
  [Host]     : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT  [AttachedDebugger]
  DefaultJob : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT


|               Method |        Mean |     Error |    StdDev |
|--------------------- |------------:|----------:|----------:|
|         LinqPopulate |    707.4 ns |  13.74 ns |  12.18 ns |
|      ForLoopPopulate |          NA |        NA |        NA |
|      ForEachPopulate |          NA |        NA |        NA |
| ParallelLinqPopulate | 17,300.1 ns | 157.07 ns | 131.16 ns |
|  ParallelForEachLoop |  6,054.7 ns | 106.20 ns |  94.14 ns |

Benchmarks with issues:
  PopulateBenchmarks.ForLoopPopulate: DefaultJob
  PopulateBenchmarks.ForEachPopulate: DefaultJob

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger

// * Hints *
Outliers
  PopulateBenchmarks.LinqPopulate: Default         -> 1 outlier  was  removed (3.17 us)
  PopulateBenchmarks.ParallelLinqPopulate: Default -> 2 outliers were removed (23.46 us, 25.46 us)
  PopulateBenchmarks.ParallelForEachLoop: Default  -> 1 outlier  was  removed (26.80 us)

// * Legends *
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  1 ns   : 1 Nanosecond (0.000000001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:01:35 (95.87 sec), executed benchmarks: 5

Global total time: 00:01:40 (100.51 sec), executed benchmarks: 5
// * Artifacts cleanup *

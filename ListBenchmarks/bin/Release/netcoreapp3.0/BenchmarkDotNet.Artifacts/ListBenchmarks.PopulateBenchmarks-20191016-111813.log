// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 5 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5
// command took 2.63s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5
// command took 5.28s and exited with 0
// ***** Done, took 00:00:08 (8.2 sec)   *****
// Found 5 benchmarks:
//   PopulateBenchmarks.LinqPopulate: DefaultJob
//   PopulateBenchmarks.ForLoopPopulate: DefaultJob
//   PopulateBenchmarks.ForEachPopulate: DefaultJob
//   PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
//   PopulateBenchmarks.ParallelForEachLoop: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: PopulateBenchmarks.LinqPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e1397229-abc6-4469-8273-2cbf5959c8b5.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.LinqPopulate" --job "Default" --benchmarkId 0 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 401800.00 ns, 401.8000 us/op
WorkloadJitting  1: 1 op, 355600.00 ns, 355.6000 us/op

OverheadJitting  2: 16 op, 799400.00 ns, 49.9625 us/op
WorkloadJitting  2: 16 op, 777500.00 ns, 48.5938 us/op

WorkloadPilot    1: 16 op, 12000.00 ns, 750.0000 ns/op
WorkloadPilot    2: 32 op, 23100.00 ns, 721.8750 ns/op
WorkloadPilot    3: 64 op, 60300.00 ns, 942.1875 ns/op
WorkloadPilot    4: 128 op, 126200.00 ns, 985.9375 ns/op
WorkloadPilot    5: 256 op, 312200.00 ns, 1.2195 us/op
WorkloadPilot    6: 512 op, 637200.00 ns, 1.2445 us/op
WorkloadPilot    7: 1024 op, 1225800.00 ns, 1.1971 us/op
WorkloadPilot    8: 2048 op, 2584400.00 ns, 1.2619 us/op
WorkloadPilot    9: 4096 op, 5257600.00 ns, 1.2836 us/op
WorkloadPilot   10: 8192 op, 10864400.00 ns, 1.3262 us/op
WorkloadPilot   11: 16384 op, 21387100.00 ns, 1.3054 us/op
WorkloadPilot   12: 32768 op, 43231400.00 ns, 1.3193 us/op
WorkloadPilot   13: 65536 op, 83795900.00 ns, 1.2786 us/op
WorkloadPilot   14: 131072 op, 134511700.00 ns, 1.0262 us/op
WorkloadPilot   15: 262144 op, 259924100.00 ns, 991.5318 ns/op
WorkloadPilot   16: 524288 op, 531513500.00 ns, 1.0138 us/op

OverheadWarmup   1: 524288 op, 2080300.00 ns, 3.9679 ns/op
OverheadWarmup   2: 524288 op, 2075200.00 ns, 3.9581 ns/op
OverheadWarmup   3: 524288 op, 2079800.00 ns, 3.9669 ns/op
OverheadWarmup   4: 524288 op, 2091200.00 ns, 3.9886 ns/op
OverheadWarmup   5: 524288 op, 2074600.00 ns, 3.9570 ns/op
OverheadWarmup   6: 524288 op, 2079200.00 ns, 3.9658 ns/op
OverheadWarmup   7: 524288 op, 2086300.00 ns, 3.9793 ns/op
OverheadWarmup   8: 524288 op, 2074700.00 ns, 3.9572 ns/op

OverheadActual   1: 524288 op, 2078500.00 ns, 3.9644 ns/op
OverheadActual   2: 524288 op, 2074900.00 ns, 3.9576 ns/op
OverheadActual   3: 524288 op, 2122300.00 ns, 4.0480 ns/op
OverheadActual   4: 524288 op, 2074600.00 ns, 3.9570 ns/op
OverheadActual   5: 524288 op, 2076700.00 ns, 3.9610 ns/op
OverheadActual   6: 524288 op, 2078000.00 ns, 3.9635 ns/op
OverheadActual   7: 524288 op, 2074300.00 ns, 3.9564 ns/op
OverheadActual   8: 524288 op, 2074500.00 ns, 3.9568 ns/op
OverheadActual   9: 524288 op, 2078700.00 ns, 3.9648 ns/op
OverheadActual  10: 524288 op, 2078400.00 ns, 3.9642 ns/op
OverheadActual  11: 524288 op, 2077300.00 ns, 3.9621 ns/op
OverheadActual  12: 524288 op, 2082000.00 ns, 3.9711 ns/op
OverheadActual  13: 524288 op, 2086700.00 ns, 3.9801 ns/op
OverheadActual  14: 524288 op, 2092600.00 ns, 3.9913 ns/op
OverheadActual  15: 524288 op, 2086400.00 ns, 3.9795 ns/op

WorkloadWarmup   1: 524288 op, 397527800.00 ns, 758.2241 ns/op
WorkloadWarmup   2: 524288 op, 682106200.00 ns, 1.3010 us/op
WorkloadWarmup   3: 524288 op, 392755700.00 ns, 749.1220 ns/op
WorkloadWarmup   4: 524288 op, 385286800.00 ns, 734.8763 ns/op
WorkloadWarmup   5: 524288 op, 399284600.00 ns, 761.5749 ns/op
WorkloadWarmup   6: 524288 op, 963822600.00 ns, 1.8383 us/op
WorkloadWarmup   7: 524288 op, 404478900.00 ns, 771.4823 ns/op

// BeforeActualRun
WorkloadActual   1: 524288 op, 395909000.00 ns, 755.1365 ns/op
WorkloadActual   2: 524288 op, 391487700.00 ns, 746.7035 ns/op
WorkloadActual   3: 524288 op, 402252500.00 ns, 767.2358 ns/op
WorkloadActual   4: 524288 op, 397729000.00 ns, 758.6079 ns/op
WorkloadActual   5: 524288 op, 400322600.00 ns, 763.5548 ns/op
WorkloadActual   6: 524288 op, 391595800.00 ns, 746.9097 ns/op
WorkloadActual   7: 524288 op, 1703123300.00 ns, 3.2484 us/op
WorkloadActual   8: 524288 op, 398404200.00 ns, 759.8957 ns/op
WorkloadActual   9: 524288 op, 397858800.00 ns, 758.8554 ns/op
WorkloadActual  10: 524288 op, 394616800.00 ns, 752.6718 ns/op
WorkloadActual  11: 524288 op, 406301800.00 ns, 774.9592 ns/op
WorkloadActual  12: 524288 op, 396176600.00 ns, 755.6469 ns/op
WorkloadActual  13: 524288 op, 402571600.00 ns, 767.8444 ns/op
WorkloadActual  14: 524288 op, 399984900.00 ns, 762.9107 ns/op
WorkloadActual  15: 524288 op, 400194500.00 ns, 763.3104 ns/op

// AfterActualRun
WorkloadResult   1: 524288 op, 393830600.00 ns, 751.1723 ns/op
WorkloadResult   2: 524288 op, 389409300.00 ns, 742.7393 ns/op
WorkloadResult   3: 524288 op, 400174100.00 ns, 763.2715 ns/op
WorkloadResult   4: 524288 op, 395650600.00 ns, 754.6436 ns/op
WorkloadResult   5: 524288 op, 398244200.00 ns, 759.5905 ns/op
WorkloadResult   6: 524288 op, 389517400.00 ns, 742.9455 ns/op
WorkloadResult   7: 524288 op, 396325800.00 ns, 755.9315 ns/op
WorkloadResult   8: 524288 op, 395780400.00 ns, 754.8912 ns/op
WorkloadResult   9: 524288 op, 392538400.00 ns, 748.7076 ns/op
WorkloadResult  10: 524288 op, 404223400.00 ns, 770.9949 ns/op
WorkloadResult  11: 524288 op, 394098200.00 ns, 751.6827 ns/op
WorkloadResult  12: 524288 op, 400493200.00 ns, 763.8802 ns/op
WorkloadResult  13: 524288 op, 397906500.00 ns, 758.9464 ns/op
WorkloadResult  14: 524288 op, 398116100.00 ns, 759.3462 ns/op
GC:  0 0 0 0 0

// AfterAll

Mean = 755.6245 ns, StdErr = 2.1162 ns (0.28%); N = 14, StdDev = 7.9183 ns
Min = 742.7393 ns, Q1 = 751.1723 ns, Median = 755.4113 ns, Q3 = 759.5905 ns, Max = 770.9949 ns
IQR = 8.4183 ns, LowerFence = 738.5448 ns, UpperFence = 772.2179 ns
ConfidenceInterval = [746.6922 ns; 764.5568 ns] (CI 99.9%), Margin = 8.9323 ns (1.18% of Mean)
Skewness = 0.02, Kurtosis = 2.19, MValue = 2

// **************************
// Benchmark: PopulateBenchmarks.ForLoopPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e1397229-abc6-4469-8273-2cbf5959c8b5.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ForLoopPopulate" --job "Default" --benchmarkId 1 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 401700.00 ns, 401.7000 us/op
WorkloadJitting  1: 1 op, 545800.00 ns, 545.8000 us/op

OverheadJitting  2: 16 op, 793100.00 ns, 49.5688 us/op
WorkloadJitting  2: 16 op, 774600.00 ns, 48.4125 us/op

WorkloadPilot    1: 16 op, 9200.00 ns, 575.0000 ns/op
WorkloadPilot    2: 32 op, 18100.00 ns, 565.6250 ns/op
WorkloadPilot    3: 64 op, 45200.00 ns, 706.2500 ns/op
WorkloadPilot    4: 128 op, 94400.00 ns, 737.5000 ns/op
WorkloadPilot    5: 256 op, 192300.00 ns, 751.1719 ns/op
WorkloadPilot    6: 512 op, 373300.00 ns, 729.1016 ns/op
WorkloadPilot    7: 1024 op, 720200.00 ns, 703.3203 ns/op
WorkloadPilot    8: 2048 op, 1560900.00 ns, 762.1582 ns/op
WorkloadPilot    9: 4096 op, 3032000.00 ns, 740.2344 ns/op
WorkloadPilot   10: 8192 op, 6464900.00 ns, 789.1724 ns/op
WorkloadPilot   11: 16384 op, 12336700.00 ns, 752.9724 ns/op
WorkloadPilot   12: 32768 op, 25251500.00 ns, 770.6146 ns/op
WorkloadPilot   13: 65536 op, 46422900.00 ns, 708.3572 ns/op
WorkloadPilot   14: 131072 op, 90462100.00 ns, 690.1711 ns/op
WorkloadPilot   15: 262144 op, 181239400.00 ns, 691.3734 ns/op
WorkloadPilot   16: 524288 op, 446839900.00 ns, 852.2795 ns/op
WorkloadPilot   17: 1048576 op, 833601100.00 ns, 794.9840 ns/op

OverheadWarmup   1: 1048576 op, 4230100.00 ns, 4.0341 ns/op
OverheadWarmup   2: 1048576 op, 4267900.00 ns, 4.0702 ns/op
OverheadWarmup   3: 1048576 op, 4295000.00 ns, 4.0960 ns/op
OverheadWarmup   4: 1048576 op, 4263300.00 ns, 4.0658 ns/op
OverheadWarmup   5: 1048576 op, 4261300.00 ns, 4.0639 ns/op
OverheadWarmup   6: 1048576 op, 4256400.00 ns, 4.0592 ns/op
OverheadWarmup   7: 1048576 op, 4231500.00 ns, 4.0355 ns/op
OverheadWarmup   8: 1048576 op, 4223200.00 ns, 4.0276 ns/op
OverheadWarmup   9: 1048576 op, 4311000.00 ns, 4.1113 ns/op
OverheadWarmup  10: 1048576 op, 4251200.00 ns, 4.0543 ns/op

OverheadActual   1: 1048576 op, 4243400.00 ns, 4.0468 ns/op
OverheadActual   2: 1048576 op, 4191800.00 ns, 3.9976 ns/op
OverheadActual   3: 1048576 op, 4249900.00 ns, 4.0530 ns/op
OverheadActual   4: 1048576 op, 4302300.00 ns, 4.1030 ns/op
OverheadActual   5: 1048576 op, 4228300.00 ns, 4.0324 ns/op
OverheadActual   6: 1048576 op, 4291900.00 ns, 4.0931 ns/op
OverheadActual   7: 1048576 op, 4254100.00 ns, 4.0570 ns/op
OverheadActual   8: 1048576 op, 4279100.00 ns, 4.0809 ns/op
OverheadActual   9: 1048576 op, 4219300.00 ns, 4.0238 ns/op
OverheadActual  10: 1048576 op, 4321300.00 ns, 4.1211 ns/op
OverheadActual  11: 1048576 op, 4284500.00 ns, 4.0860 ns/op
OverheadActual  12: 1048576 op, 4225200.00 ns, 4.0295 ns/op
OverheadActual  13: 1048576 op, 4253600.00 ns, 4.0565 ns/op
OverheadActual  14: 1048576 op, 4354100.00 ns, 4.1524 ns/op
OverheadActual  15: 1048576 op, 4248000.00 ns, 4.0512 ns/op

WorkloadWarmup   1: 1048576 op, 578190600.00 ns, 551.4055 ns/op
WorkloadWarmup   2: 1048576 op, 1186850000.00 ns, 1.1319 us/op
WorkloadWarmup   3: 1048576 op, 571597600.00 ns, 545.1180 ns/op
WorkloadWarmup   4: 1048576 op, 529573300.00 ns, 505.0405 ns/op
WorkloadWarmup   5: 1048576 op, 541523200.00 ns, 516.4368 ns/op
WorkloadWarmup   6: 1048576 op, 1723893800.00 ns, 1.6440 us/op
WorkloadWarmup   7: 1048576 op, 506922900.00 ns, 483.4394 ns/op

// BeforeActualRun
WorkloadActual   1: 1048576 op, 505040000.00 ns, 481.6437 ns/op
WorkloadActual   2: 1048576 op, 548342800.00 ns, 522.9404 ns/op
WorkloadActual   3: 1048576 op, 607572100.00 ns, 579.4259 ns/op
WorkloadActual   4: 1048576 op, 606266300.00 ns, 578.1806 ns/op
WorkloadActual   5: 1048576 op, 558426500.00 ns, 532.5570 ns/op
WorkloadActual   6: 1048576 op, 591003000.00 ns, 563.6244 ns/op
WorkloadActual   7: 1048576 op, 6572000400.00 ns, 6.2675 us/op
WorkloadActual   8: 1048576 op, 630115400.00 ns, 600.9249 ns/op
WorkloadActual   9: 1048576 op, 636079700.00 ns, 606.6129 ns/op
WorkloadActual  10: 1048576 op, 629351000.00 ns, 600.1959 ns/op
WorkloadActual  11: 1048576 op, 626319000.00 ns, 597.3043 ns/op

OutOfMemoryException!
BenchmarkDotNet continues to run additional iterations until desired accuracy level is achieved. It's possible only if the benchmark method doesn't have any side-effects.
If your benchmark allocates memory and keeps it alive, you are creating a memory leak.
You should redesign your benchmark and remove the side-effects. You can use `OperationsPerInvoke`, `IterationSetup` and `IterationCleanup` to do that.

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.OutOfMemoryException: Array dimensions exceeded supported range.
   at System.Collections.Generic.List`1.set_Capacity(Int32 value)
   at System.Collections.Generic.List`1.EnsureCapacity(Int32 min)
   at System.Collections.Generic.List`1.AddWithResize(T item)
   at ListBenchmarks.PopulateBenchmarks.ForLoopPopulate() in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\Program.cs:line 96
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionUnroll(Int64 invokeCount) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5\e1397229-abc6-4469-8273-2cbf5959c8b5.notcs:line 1123
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.RunAuto(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.Run(Int64 invokeCount, IterationMode iterationMode, Boolean runAuto, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.EngineActualStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5\e1397229-abc6-4469-8273-2cbf5959c8b5.notcs:line 815
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5\e1397229-abc6-4469-8273-2cbf5959c8b5.notcs:line 52
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: PopulateBenchmarks.ForEachPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e1397229-abc6-4469-8273-2cbf5959c8b5.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ForEachPopulate" --job "Default" --benchmarkId 2 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 404200.00 ns, 404.2000 us/op
WorkloadJitting  1: 1 op, 824300.00 ns, 824.3000 us/op

OverheadJitting  2: 16 op, 812900.00 ns, 50.8062 us/op
WorkloadJitting  2: 16 op, 778000.00 ns, 48.6250 us/op

WorkloadPilot    1: 16 op, 9200.00 ns, 575.0000 ns/op
WorkloadPilot    2: 32 op, 16300.00 ns, 509.3750 ns/op
WorkloadPilot    3: 64 op, 57700.00 ns, 901.5625 ns/op
WorkloadPilot    4: 128 op, 151600.00 ns, 1.1844 us/op
WorkloadPilot    5: 256 op, 233600.00 ns, 912.5000 ns/op
WorkloadPilot    6: 512 op, 464800.00 ns, 907.8125 ns/op
WorkloadPilot    7: 1024 op, 874900.00 ns, 854.3945 ns/op
WorkloadPilot    8: 2048 op, 1742900.00 ns, 851.0254 ns/op
WorkloadPilot    9: 4096 op, 3537600.00 ns, 863.6719 ns/op
WorkloadPilot   10: 8192 op, 7679300.00 ns, 937.4146 ns/op
WorkloadPilot   11: 16384 op, 14116700.00 ns, 861.6150 ns/op
WorkloadPilot   12: 32768 op, 27930100.00 ns, 852.3590 ns/op
WorkloadPilot   13: 65536 op, 53732700.00 ns, 819.8959 ns/op
WorkloadPilot   14: 131072 op, 108293400.00 ns, 826.2131 ns/op
WorkloadPilot   15: 262144 op, 218611900.00 ns, 833.9382 ns/op
WorkloadPilot   16: 524288 op, 438303000.00 ns, 835.9966 ns/op
WorkloadPilot   17: 1048576 op, 881944900.00 ns, 841.0882 ns/op

OverheadWarmup   1: 1048576 op, 4247900.00 ns, 4.0511 ns/op
OverheadWarmup   2: 1048576 op, 4254200.00 ns, 4.0571 ns/op
OverheadWarmup   3: 1048576 op, 4352400.00 ns, 4.1508 ns/op
OverheadWarmup   4: 1048576 op, 4438800.00 ns, 4.2332 ns/op
OverheadWarmup   5: 1048576 op, 4358700.00 ns, 4.1568 ns/op
OverheadWarmup   6: 1048576 op, 4339100.00 ns, 4.1381 ns/op
OverheadWarmup   7: 1048576 op, 4379000.00 ns, 4.1761 ns/op
OverheadWarmup   8: 1048576 op, 4260200.00 ns, 4.0628 ns/op

OverheadActual   1: 1048576 op, 4245800.00 ns, 4.0491 ns/op
OverheadActual   2: 1048576 op, 4252400.00 ns, 4.0554 ns/op
OverheadActual   3: 1048576 op, 4236700.00 ns, 4.0404 ns/op
OverheadActual   4: 1048576 op, 4259700.00 ns, 4.0624 ns/op
OverheadActual   5: 1048576 op, 4237100.00 ns, 4.0408 ns/op
OverheadActual   6: 1048576 op, 4343000.00 ns, 4.1418 ns/op
OverheadActual   7: 1048576 op, 4442700.00 ns, 4.2369 ns/op
OverheadActual   8: 1048576 op, 4432200.00 ns, 4.2269 ns/op
OverheadActual   9: 1048576 op, 4347000.00 ns, 4.1456 ns/op
OverheadActual  10: 1048576 op, 4344600.00 ns, 4.1433 ns/op
OverheadActual  11: 1048576 op, 4426100.00 ns, 4.2211 ns/op
OverheadActual  12: 1048576 op, 4445300.00 ns, 4.2394 ns/op
OverheadActual  13: 1048576 op, 4289200.00 ns, 4.0905 ns/op
OverheadActual  14: 1048576 op, 4241700.00 ns, 4.0452 ns/op
OverheadActual  15: 1048576 op, 4358200.00 ns, 4.1563 ns/op

WorkloadWarmup   1: 1048576 op, 565047200.00 ns, 538.8710 ns/op
WorkloadWarmup   2: 1048576 op, 1104197200.00 ns, 1.0530 us/op
WorkloadWarmup   3: 1048576 op, 561956600.00 ns, 535.9236 ns/op
WorkloadWarmup   4: 1048576 op, 553005500.00 ns, 527.3871 ns/op
WorkloadWarmup   5: 1048576 op, 548241600.00 ns, 522.8439 ns/op
WorkloadWarmup   6: 1048576 op, 1696001100.00 ns, 1.6174 us/op
WorkloadWarmup   7: 1048576 op, 611841500.00 ns, 583.4975 ns/op

// BeforeActualRun
WorkloadActual   1: 1048576 op, 566630000.00 ns, 540.3805 ns/op
WorkloadActual   2: 1048576 op, 585676600.00 ns, 558.5447 ns/op
WorkloadActual   3: 1048576 op, 576138100.00 ns, 549.4481 ns/op
WorkloadActual   4: 1048576 op, 555191200.00 ns, 529.4716 ns/op
WorkloadActual   5: 1048576 op, 563167800.00 ns, 537.0787 ns/op
WorkloadActual   6: 1048576 op, 570933600.00 ns, 544.4847 ns/op
WorkloadActual   7: 1048576 op, 5416551600.00 ns, 5.1656 us/op
WorkloadActual   8: 1048576 op, 597800000.00 ns, 570.1065 ns/op
WorkloadActual   9: 1048576 op, 595751500.00 ns, 568.1529 ns/op
WorkloadActual  10: 1048576 op, 610546800.00 ns, 582.2628 ns/op
WorkloadActual  11: 1048576 op, 588151100.00 ns, 560.9046 ns/op

OutOfMemoryException!
BenchmarkDotNet continues to run additional iterations until desired accuracy level is achieved. It's possible only if the benchmark method doesn't have any side-effects.
If your benchmark allocates memory and keeps it alive, you are creating a memory leak.
You should redesign your benchmark and remove the side-effects. You can use `OperationsPerInvoke`, `IterationSetup` and `IterationCleanup` to do that.

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.OutOfMemoryException: Array dimensions exceeded supported range.
   at System.Collections.Generic.List`1.set_Capacity(Int32 value)
   at System.Collections.Generic.List`1.EnsureCapacity(Int32 min)
   at System.Collections.Generic.List`1.AddWithResize(T item)
   at ListBenchmarks.PopulateBenchmarks.ForEachPopulate() in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\Program.cs:line 109
   at BenchmarkDotNet.Autogenerated.Runnable_2.WorkloadActionUnroll(Int64 invokeCount) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5\e1397229-abc6-4469-8273-2cbf5959c8b5.notcs:line 1767
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.RunAuto(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.Run(Int64 invokeCount, IterationMode iterationMode, Boolean runAuto, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.EngineActualStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_2.Run(IHost host, String benchmarkName) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5\e1397229-abc6-4469-8273-2cbf5959c8b5.notcs:line 1459
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5\e1397229-abc6-4469-8273-2cbf5959c8b5.notcs:line 52
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e1397229-abc6-4469-8273-2cbf5959c8b5.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ParallelLinqPopulate" --job "Default" --benchmarkId 3 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 406200.00 ns, 406.2000 us/op
WorkloadJitting  1: 1 op, 20393700.00 ns, 20.3937 ms/op

OverheadJitting  2: 16 op, 836400.00 ns, 52.2750 us/op
WorkloadJitting  2: 16 op, 1297200.00 ns, 81.0750 us/op

WorkloadPilot    1: 16 op, 402100.00 ns, 25.1313 us/op
WorkloadPilot    2: 32 op, 683900.00 ns, 21.3719 us/op
WorkloadPilot    3: 64 op, 1471300.00 ns, 22.9891 us/op
WorkloadPilot    4: 128 op, 2888500.00 ns, 22.5664 us/op
WorkloadPilot    5: 256 op, 5721100.00 ns, 22.3480 us/op
WorkloadPilot    6: 512 op, 10574400.00 ns, 20.6531 us/op
WorkloadPilot    7: 1024 op, 22095100.00 ns, 21.5772 us/op
WorkloadPilot    8: 2048 op, 42009100.00 ns, 20.5123 us/op
WorkloadPilot    9: 4096 op, 84061900.00 ns, 20.5229 us/op
WorkloadPilot   10: 8192 op, 155910100.00 ns, 19.0320 us/op
WorkloadPilot   11: 16384 op, 313693100.00 ns, 19.1463 us/op
WorkloadPilot   12: 32768 op, 607194700.00 ns, 18.5301 us/op

OverheadWarmup   1: 32768 op, 152800.00 ns, 4.6631 ns/op
OverheadWarmup   2: 32768 op, 130000.00 ns, 3.9673 ns/op
OverheadWarmup   3: 32768 op, 130100.00 ns, 3.9703 ns/op
OverheadWarmup   4: 32768 op, 129900.00 ns, 3.9642 ns/op
OverheadWarmup   5: 32768 op, 131400.00 ns, 4.0100 ns/op
OverheadWarmup   6: 32768 op, 167500.00 ns, 5.1117 ns/op
OverheadWarmup   7: 32768 op, 129900.00 ns, 3.9642 ns/op

OverheadActual   1: 32768 op, 130000.00 ns, 3.9673 ns/op
OverheadActual   2: 32768 op, 130200.00 ns, 3.9734 ns/op
OverheadActual   3: 32768 op, 130000.00 ns, 3.9673 ns/op
OverheadActual   4: 32768 op, 130000.00 ns, 3.9673 ns/op
OverheadActual   5: 32768 op, 129900.00 ns, 3.9642 ns/op
OverheadActual   6: 32768 op, 129900.00 ns, 3.9642 ns/op
OverheadActual   7: 32768 op, 130200.00 ns, 3.9734 ns/op
OverheadActual   8: 32768 op, 130000.00 ns, 3.9673 ns/op
OverheadActual   9: 32768 op, 130000.00 ns, 3.9673 ns/op
OverheadActual  10: 32768 op, 133300.00 ns, 4.0680 ns/op
OverheadActual  11: 32768 op, 135300.00 ns, 4.1290 ns/op
OverheadActual  12: 32768 op, 141500.00 ns, 4.3182 ns/op
OverheadActual  13: 32768 op, 133900.00 ns, 4.0863 ns/op
OverheadActual  14: 32768 op, 130100.00 ns, 3.9703 ns/op
OverheadActual  15: 32768 op, 130000.00 ns, 3.9673 ns/op

WorkloadWarmup   1: 32768 op, 585829200.00 ns, 17.8781 us/op
WorkloadWarmup   2: 32768 op, 554803200.00 ns, 16.9312 us/op
WorkloadWarmup   3: 32768 op, 722053700.00 ns, 22.0353 us/op
WorkloadWarmup   4: 32768 op, 569964800.00 ns, 17.3939 us/op
WorkloadWarmup   5: 32768 op, 558990300.00 ns, 17.0590 us/op
WorkloadWarmup   6: 32768 op, 552553200.00 ns, 16.8626 us/op
WorkloadWarmup   7: 32768 op, 564723700.00 ns, 17.2340 us/op
WorkloadWarmup   8: 32768 op, 594542100.00 ns, 18.1440 us/op
WorkloadWarmup   9: 32768 op, 554925100.00 ns, 16.9350 us/op

// BeforeActualRun
WorkloadActual   1: 32768 op, 566430000.00 ns, 17.2861 us/op
WorkloadActual   2: 32768 op, 563380700.00 ns, 17.1930 us/op
WorkloadActual   3: 32768 op, 564562100.00 ns, 17.2291 us/op
WorkloadActual   4: 32768 op, 557538100.00 ns, 17.0147 us/op
WorkloadActual   5: 32768 op, 570306000.00 ns, 17.4044 us/op
WorkloadActual   6: 32768 op, 559044500.00 ns, 17.0607 us/op
WorkloadActual   7: 32768 op, 564957700.00 ns, 17.2411 us/op
WorkloadActual   8: 32768 op, 558125100.00 ns, 17.0326 us/op
WorkloadActual   9: 32768 op, 979301900.00 ns, 29.8859 us/op
WorkloadActual  10: 32768 op, 567471000.00 ns, 17.3178 us/op
WorkloadActual  11: 32768 op, 558986400.00 ns, 17.0589 us/op
WorkloadActual  12: 32768 op, 559114500.00 ns, 17.0628 us/op
WorkloadActual  13: 32768 op, 558168500.00 ns, 17.0340 us/op
WorkloadActual  14: 32768 op, 562578100.00 ns, 17.1685 us/op
WorkloadActual  15: 32768 op, 561869600.00 ns, 17.1469 us/op

// AfterActualRun
WorkloadResult   1: 32768 op, 566300000.00 ns, 17.2821 us/op
WorkloadResult   2: 32768 op, 563250700.00 ns, 17.1890 us/op
WorkloadResult   3: 32768 op, 564432100.00 ns, 17.2251 us/op
WorkloadResult   4: 32768 op, 557408100.00 ns, 17.0107 us/op
WorkloadResult   5: 32768 op, 570176000.00 ns, 17.4004 us/op
WorkloadResult   6: 32768 op, 558914500.00 ns, 17.0567 us/op
WorkloadResult   7: 32768 op, 564827700.00 ns, 17.2372 us/op
WorkloadResult   8: 32768 op, 557995100.00 ns, 17.0287 us/op
WorkloadResult   9: 32768 op, 567341000.00 ns, 17.3139 us/op
WorkloadResult  10: 32768 op, 558856400.00 ns, 17.0549 us/op
WorkloadResult  11: 32768 op, 558984500.00 ns, 17.0589 us/op
WorkloadResult  12: 32768 op, 558038500.00 ns, 17.0300 us/op
WorkloadResult  13: 32768 op, 562448100.00 ns, 17.1646 us/op
WorkloadResult  14: 32768 op, 561739600.00 ns, 17.1429 us/op
GC:  0 0 0 0 0

// AfterAll

Mean = 17.1568 us, StdErr = 0.0328 us (0.19%); N = 14, StdDev = 0.1228 us
Min = 17.0107 us, Q1 = 17.0549 us, Median = 17.1537 us, Q3 = 17.2372 us, Max = 17.4004 us
IQR = 0.1822 us, LowerFence = 16.7816 us, UpperFence = 17.5105 us
ConfidenceInterval = [17.0183 us; 17.2953 us] (CI 99.9%), Margin = 0.1385 us (0.81% of Mean)
Skewness = 0.42, Kurtosis = 1.8, MValue = 2

// **************************
// Benchmark: PopulateBenchmarks.ParallelForEachLoop: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e1397229-abc6-4469-8273-2cbf5959c8b5.dll" --benchmarkName "ListBenchmarks.PopulateBenchmarks.ParallelForEachLoop" --job "Default" --benchmarkId 4 in F:\Eduardo\Documents\Code\C#\LambdaBenchmarks\LambdaBenchmarks\bin\Release\netcoreapp3.0\e1397229-abc6-4469-8273-2cbf5959c8b5\bin\Release\netcoreapp3.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 385400.00 ns, 385.4000 us/op
WorkloadJitting  1: 1 op, 10526800.00 ns, 10.5268 ms/op

OverheadJitting  2: 16 op, 905800.00 ns, 56.6125 us/op
WorkloadJitting  2: 16 op, 1475200.00 ns, 92.2000 us/op

WorkloadPilot    1: 16 op, 367400.00 ns, 22.9625 us/op
WorkloadPilot    2: 32 op, 308800.00 ns, 9.6500 us/op
WorkloadPilot    3: 64 op, 526600.00 ns, 8.2281 us/op
WorkloadPilot    4: 128 op, 1301200.00 ns, 10.1656 us/op
WorkloadPilot    5: 256 op, 2319300.00 ns, 9.0598 us/op
WorkloadPilot    6: 512 op, 4595200.00 ns, 8.9750 us/op
WorkloadPilot    7: 1024 op, 10677400.00 ns, 10.4271 us/op
WorkloadPilot    8: 2048 op, 18730400.00 ns, 9.1457 us/op
WorkloadPilot    9: 4096 op, 36433700.00 ns, 8.8949 us/op
WorkloadPilot   10: 8192 op, 72814200.00 ns, 8.8885 us/op
WorkloadPilot   11: 16384 op, 126802400.00 ns, 7.7394 us/op
WorkloadPilot   12: 32768 op, 248543800.00 ns, 7.5850 us/op
WorkloadPilot   13: 65536 op, 484438700.00 ns, 7.3919 us/op
WorkloadPilot   14: 131072 op, 831206800.00 ns, 6.3416 us/op

OverheadWarmup   1: 131072 op, 536300.00 ns, 4.0916 ns/op
OverheadWarmup   2: 131072 op, 535300.00 ns, 4.0840 ns/op
OverheadWarmup   3: 131072 op, 533500.00 ns, 4.0703 ns/op
OverheadWarmup   4: 131072 op, 578300.00 ns, 4.4121 ns/op
OverheadWarmup   5: 131072 op, 543700.00 ns, 4.1481 ns/op
OverheadWarmup   6: 131072 op, 536700.00 ns, 4.0947 ns/op
OverheadWarmup   7: 131072 op, 537900.00 ns, 4.1039 ns/op
OverheadWarmup   8: 131072 op, 536200.00 ns, 4.0909 ns/op

OverheadActual   1: 131072 op, 530700.00 ns, 4.0489 ns/op
OverheadActual   2: 131072 op, 537000.00 ns, 4.0970 ns/op
OverheadActual   3: 131072 op, 530500.00 ns, 4.0474 ns/op
OverheadActual   4: 131072 op, 533400.00 ns, 4.0695 ns/op
OverheadActual   5: 131072 op, 533000.00 ns, 4.0665 ns/op
OverheadActual   6: 131072 op, 530400.00 ns, 4.0466 ns/op
OverheadActual   7: 131072 op, 539800.00 ns, 4.1183 ns/op
OverheadActual   8: 131072 op, 530400.00 ns, 4.0466 ns/op
OverheadActual   9: 131072 op, 531600.00 ns, 4.0558 ns/op
OverheadActual  10: 131072 op, 542300.00 ns, 4.1374 ns/op
OverheadActual  11: 131072 op, 530400.00 ns, 4.0466 ns/op
OverheadActual  12: 131072 op, 530300.00 ns, 4.0459 ns/op
OverheadActual  13: 131072 op, 530300.00 ns, 4.0459 ns/op
OverheadActual  14: 131072 op, 542400.00 ns, 4.1382 ns/op
OverheadActual  15: 131072 op, 530400.00 ns, 4.0466 ns/op

WorkloadWarmup   1: 131072 op, 835448400.00 ns, 6.3740 us/op
WorkloadWarmup   2: 131072 op, 782971300.00 ns, 5.9736 us/op
WorkloadWarmup   3: 131072 op, 1465613900.00 ns, 11.1817 us/op
WorkloadWarmup   4: 131072 op, 810872500.00 ns, 6.1865 us/op
WorkloadWarmup   5: 131072 op, 824460000.00 ns, 6.2901 us/op
WorkloadWarmup   6: 131072 op, 830188800.00 ns, 6.3338 us/op
WorkloadWarmup   7: 131072 op, 1696066500.00 ns, 12.9400 us/op
WorkloadWarmup   8: 131072 op, 804776600.00 ns, 6.1400 us/op

// BeforeActualRun
WorkloadActual   1: 131072 op, 817336000.00 ns, 6.2358 us/op
WorkloadActual   2: 131072 op, 805098300.00 ns, 6.1424 us/op
WorkloadActual   3: 131072 op, 809644900.00 ns, 6.1771 us/op
WorkloadActual   4: 131072 op, 834557000.00 ns, 6.3672 us/op
WorkloadActual   5: 131072 op, 787336600.00 ns, 6.0069 us/op
WorkloadActual   6: 131072 op, 785206700.00 ns, 5.9907 us/op
WorkloadActual   7: 131072 op, 3545081900.00 ns, 27.0468 us/op
WorkloadActual   8: 131072 op, 807043100.00 ns, 6.1573 us/op
WorkloadActual   9: 131072 op, 815265000.00 ns, 6.2200 us/op
WorkloadActual  10: 131072 op, 804123500.00 ns, 6.1350 us/op
WorkloadActual  11: 131072 op, 790128900.00 ns, 6.0282 us/op
WorkloadActual  12: 131072 op, 788773600.00 ns, 6.0179 us/op
WorkloadActual  13: 131072 op, 781493400.00 ns, 5.9623 us/op
WorkloadActual  14: 131072 op, 790201400.00 ns, 6.0288 us/op
WorkloadActual  15: 131072 op, 788980200.00 ns, 6.0194 us/op
WorkloadActual  16: 131072 op, 782182700.00 ns, 5.9676 us/op
WorkloadActual  17: 131072 op, 794314800.00 ns, 6.0601 us/op

// AfterActualRun
WorkloadResult   1: 131072 op, 816805300.00 ns, 6.2317 us/op
WorkloadResult   2: 131072 op, 804567600.00 ns, 6.1384 us/op
WorkloadResult   3: 131072 op, 809114200.00 ns, 6.1731 us/op
WorkloadResult   4: 131072 op, 834026300.00 ns, 6.3631 us/op
WorkloadResult   5: 131072 op, 786805900.00 ns, 6.0029 us/op
WorkloadResult   6: 131072 op, 784676000.00 ns, 5.9866 us/op
WorkloadResult   7: 131072 op, 806512400.00 ns, 6.1532 us/op
WorkloadResult   8: 131072 op, 814734300.00 ns, 6.2159 us/op
WorkloadResult   9: 131072 op, 803592800.00 ns, 6.1309 us/op
WorkloadResult  10: 131072 op, 789598200.00 ns, 6.0242 us/op
WorkloadResult  11: 131072 op, 788242900.00 ns, 6.0138 us/op
WorkloadResult  12: 131072 op, 780962700.00 ns, 5.9583 us/op
WorkloadResult  13: 131072 op, 789670700.00 ns, 6.0247 us/op
WorkloadResult  14: 131072 op, 788449500.00 ns, 6.0154 us/op
WorkloadResult  15: 131072 op, 781652000.00 ns, 5.9635 us/op
WorkloadResult  16: 131072 op, 793784100.00 ns, 6.0561 us/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.0907 us, StdErr = 0.0287 us (0.47%); N = 16, StdDev = 0.1149 us
Min = 5.9583 us, Q1 = 6.0083 us, Median = 6.0404 us, Q3 = 6.1631 us, Max = 6.3631 us
IQR = 0.1548 us, LowerFence = 5.7761 us, UpperFence = 6.3953 us
ConfidenceInterval = [5.9737 us; 6.2078 us] (CI 99.9%), Margin = 0.1170 us (1.92% of Mean)
Skewness = 0.75, Kurtosis = 2.53, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\ListBenchmarks.PopulateBenchmarks-report.html

// * Detailed results *
PopulateBenchmarks.LinqPopulate: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 755.6245 ns, StdErr = 2.1162 ns (0.28%); N = 14, StdDev = 7.9183 ns
Min = 742.7393 ns, Q1 = 751.1723 ns, Median = 755.4113 ns, Q3 = 759.5905 ns, Max = 770.9949 ns
IQR = 8.4183 ns, LowerFence = 738.5448 ns, UpperFence = 772.2179 ns
ConfidenceInterval = [746.6922 ns; 764.5568 ns] (CI 99.9%), Margin = 8.9323 ns (1.18% of Mean)
Skewness = 0.02, Kurtosis = 2.19, MValue = 2
-------------------- Histogram --------------------
[739.865 ns ; 773.870 ns) | @@@@@@@@@@@@@@
---------------------------------------------------

PopulateBenchmarks.ForLoopPopulate: DefaultJob
Runtime = ; GC = 
There are not any results runs

PopulateBenchmarks.ForEachPopulate: DefaultJob
Runtime = ; GC = 
There are not any results runs

PopulateBenchmarks.ParallelLinqPopulate: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 17.1568 us, StdErr = 0.0328 us (0.19%); N = 14, StdDev = 0.1228 us
Min = 17.0107 us, Q1 = 17.0549 us, Median = 17.1537 us, Q3 = 17.2372 us, Max = 17.4004 us
IQR = 0.1822 us, LowerFence = 16.7816 us, UpperFence = 17.5105 us
ConfidenceInterval = [17.0183 us; 17.2953 us] (CI 99.9%), Margin = 0.1385 us (0.81% of Mean)
Skewness = 0.42, Kurtosis = 1.8, MValue = 2
-------------------- Histogram --------------------
[16.966 us ; 17.445 us) | @@@@@@@@@@@@@@
---------------------------------------------------

PopulateBenchmarks.ParallelForEachLoop: DefaultJob
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 6.0907 us, StdErr = 0.0287 us (0.47%); N = 16, StdDev = 0.1149 us
Min = 5.9583 us, Q1 = 6.0083 us, Median = 6.0404 us, Q3 = 6.1631 us, Max = 6.3631 us
IQR = 0.1548 us, LowerFence = 5.7761 us, UpperFence = 6.3953 us
ConfidenceInterval = [5.9737 us; 6.2078 us] (CI 99.9%), Margin = 0.1170 us (1.92% of Mean)
Skewness = 0.75, Kurtosis = 2.53, MValue = 2
-------------------- Histogram --------------------
[5.932 us ; 6.090 us) | @@@@@@@@@
[6.090 us ; 6.403 us) | @@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.18362
AMD Ryzen 5 1600, 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=3.0.100
  [Host]     : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT  [AttachedDebugger]
  DefaultJob : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), 64bit RyuJIT


|               Method |        Mean |      Error |     StdDev |
|--------------------- |------------:|-----------:|-----------:|
|         LinqPopulate |    755.6 ns |   8.932 ns |   7.918 ns |
|      ForLoopPopulate |          NA |         NA |         NA |
|      ForEachPopulate |          NA |         NA |         NA |
| ParallelLinqPopulate | 17,156.8 ns | 138.494 ns | 122.771 ns |
|  ParallelForEachLoop |  6,090.7 ns | 117.036 ns | 114.945 ns |

Benchmarks with issues:
  PopulateBenchmarks.ForLoopPopulate: DefaultJob
  PopulateBenchmarks.ForEachPopulate: DefaultJob

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger

// * Hints *
Outliers
  PopulateBenchmarks.LinqPopulate: Default         -> 1 outlier  was  removed (3.25 us)
  PopulateBenchmarks.ParallelLinqPopulate: Default -> 1 outlier  was  removed (29.89 us)
  PopulateBenchmarks.ParallelForEachLoop: Default  -> 1 outlier  was  removed (27.05 us)

// * Legends *
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  1 ns   : 1 Nanosecond (0.000000001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:01:42 (102.9 sec), executed benchmarks: 5

Global total time: 00:01:51 (111.11 sec), executed benchmarks: 5
// * Artifacts cleanup *
